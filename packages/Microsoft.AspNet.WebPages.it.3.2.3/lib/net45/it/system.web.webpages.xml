<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.WebPages</name>
  </assembly>
  <members>
    <member name="T:System.Web.Helpers.AntiForgery">
      <summary>Consente di impedire a script dannosi di inviare richieste di pagine manomesse.</summary>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml">
      <summary>Aggiunge un token di autenticazione a un form per la protezione da richieste false.</summary>
      <returns>Restituisce una stringa che contiene il valore del token crittografato in un campo HTML nascosto.</returns>
      <exception cref="T:System.ArgumentException">L'oggetto <see cref="T:System.Web.HttpContext" /> corrente è null.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml(System.Web.HttpContextBase,System.String,System.String,System.String)">
      <summary>Aggiunge un token di autenticazione a un form per la protezione da richieste false e consente ai chiamanti di specificare i dettagli dell'autenticazione.</summary>
      <returns>Restituisce il valore del token crittografato in un campo HTML nascosto.</returns>
      <param name="httpContext">Dati del contesto HTTP per una richiesta.</param>
      <param name="salt">Stringa facoltativa di caratteri casuali, ad esempio Z*7g1&amp;p4, utilizzata per aggiungere complessità alla crittografia per maggiore sicurezza.Il valore predefinito è null.</param>
      <param name="domain">Dominio di un'applicazione Web da cui viene inviata una richiesta.</param>
      <param name="path">Percorso radice virtuale di un'applicazione Web da cui viene inviata la richiesta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> è null.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetTokens(System.String,System.String@,System.String@)">
      <summary>Ottiene il token di ricerca.</summary>
      <param name="oldCookieToken">Token del cookie precedente.</param>
      <param name="newCookieToken">Nuovo token del cookie.</param>
      <param name="formToken">Form del token.</param>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate">
      <summary>Verifica che i dati di input di un campo del form HTML provengano dall'utente che ha inviato tali dati.</summary>
      <exception cref="T:System.ArgumentException">Il valore <see cref="T:System.Web.HttpContext" /> corrente è null.</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">Token del cookie HTTP associato a una richiesta valida mancanteoppureToken del form mancante.oppureIl valore del token del form non corrisponde al valore del token del cookie.oppureIl valore del token del form non corrisponde al valore del token del cookie.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.String,System.String)">
      <summary>Verifica che i dati di input di un campo del form HTML provengano dall'utente che ha inviato tali dati.</summary>
      <param name="cookieToken">Valore del token del cookie.</param>
      <param name="formToken">Form del token.</param>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.Web.HttpContextBase,System.String)">
      <summary>Verifica che i dati di input da un campo di un form HTML provengano dall'utente che ha inviato i dati e consente ai chiamanti di specificare ulteriori dettagli di convalida.</summary>
      <param name="httpContext">Dati del contesto HTTP per una richiesta.</param>
      <param name="salt">Stringa facoltativa di caratteri casuali, ad esempio Z*7g1&amp;p4, utilizzata per decrittografare un token di autenticazione creato dalla classe <see cref="T:System.Web.Helpers.AntiForgery" />.Il valore predefinito è null.</param>
      <exception cref="T:System.ArgumentException">Il valore <see cref="T:System.Web.HttpContext" /> corrente è null.</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">Token del cookie HTTP associato a una richiesta valida mancante.oppureToken del form mancante.oppureIl valore del token del form non corrisponde al valore del token del cookie.oppureIl valore del token del form non corrisponde al valore del token del cookie.oppureIl valore <paramref name="salt" /> fornito non corrisponde al valore <paramref name="salt" /> utilizzato per creare il token del form.</exception>
    </member>
    <member name="T:System.Web.Helpers.AntiForgeryConfig">
      <summary>Fornisce la configurazione a livello di programmazione per il sistema di token antifalsificazione.</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.AdditionalDataProvider">
      <summary>Ottiene un provider di dati in grado di fornire dati aggiuntivi da inserire in tutti i token generati e in grado di convalidare ulteriori dati nei token in ingresso.</summary>
      <returns>Provider di dati.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.CookieName">
      <summary>Ottiene o imposta il nome del cookie usato dal sistema antifalsificazione.</summary>
      <returns>Nome del cookie.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.RequireSsl">
      <summary>Ottiene o imposta un valore che indica se il cookie antifalsificazione richiede SSL per la restituzione al server.</summary>
      <returns>true se è necessario SSL per restituire il cookie antifalsificazione al server. In caso contrario, false. </returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressIdentityHeuristicChecks">
      <summary>Ottiene o imposta un valore che indica se il sistema antifalsificazione deve saltare il controllo delle condizioni che potrebbero indicare un utilizzo improprio del sistema.</summary>
      <returns>true se il sistema antifalsificazione non deve eseguire il controllo alla ricerca di possibili utilizzi impropri. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressXFrameOptionsHeader">
      <summary>Specifica se eliminare la generazione dell'intestazione X-Frame-Options usata per prevenire ClickJacking.Per impostazione predefinita, l'intestazione X-Frame-Options viene generata con il valore SAMEORIGIN.Se questa impostazione è "true", l'intestazione X-Frame-Options della risposta non verrà generata.</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.UniqueClaimTypeIdentifier">
      <summary>Se viene usata l'autorizzazione basata su attestazioni, ottiene o imposta il tipo di attestazione dall'identità usata per identificare l'utente in modo univoco.</summary>
      <returns>Tipo di attestazione.</returns>
    </member>
    <member name="T:System.Web.Helpers.IAntiForgeryAdditionalDataProvider">
      <summary>Consente di includere o convalidare dati personalizzati per i token antifalsificazione.</summary>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.GetAdditionalData(System.Web.HttpContextBase)">
      <summary>Fornisce dati aggiuntivi da archiviare per i token antifalsificazione generati durante la richiesta.</summary>
      <returns>Dati supplementari da incorporare nel token antifalsificazione.</returns>
      <param name="context">Informazioni sulla richiesta corrente.</param>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.ValidateAdditionalData(System.Web.HttpContextBase,System.String)">
      <summary>Convalida i dati aggiuntivi incorporati all'interno di un token antifalsificazione in ingresso.</summary>
      <returns>true se i dati sono validi. In caso contrario, false.</returns>
      <param name="context">Informazioni sulla richiesta corrente.</param>
      <param name="additionalData">Dati supplementari incorporati nel token.</param>
    </member>
    <member name="T:System.Web.Helpers.UnvalidatedRequestValues">
      <summary>Fornisce accesso ai valori di form non convalidati nell'oggetto <see cref="T:System.Web.HttpRequest" />.</summary>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Form">
      <summary>Ottiene un insieme di valori di form non convalidati che sono stati inviati dal browser.</summary>
      <returns>Insieme non convalidato di valori del form.</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Item(System.String)">
      <summary>Ottiene l'oggetto non convalidato specificato dalla raccolta di valori pubblicati nell'oggetto <see cref="T:System.Web.HttpRequest" />.</summary>
      <returns>Membro specificato oppure null se l'elemento specificato non viene trovato.</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.QueryString">
      <summary>Ottiene un insieme di valori della stringa di query non convalidati.</summary>
      <returns>Insieme di valori della stringa di query non convalidati.</returns>
    </member>
    <member name="T:System.Web.Helpers.Validation">
      <summary>Esclude i campi dell'oggetto Request dalla verifica della presenza di script client e markup HTML potenzialmente pericolosi.</summary>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest)">
      <summary>Restituisce una versione dei valori del form, dei cookie e delle variabili di stringhe di query senza prima verificare la presenza di markup HTML e script client.</summary>
      <returns>Oggetto contenente versioni non convalidate del form e dei valori di stringhe di query.</returns>
      <param name="request">Oggetto <see cref="T:System.Web.HttpRequest" /> contenente i valori da escludere dalla convalida della richiesta.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest,System.String)">
      <summary>Restituisce un valore dal campo del form, dal cookie o dalla variabile di stringa di query specificata senza prima verificare la presenza di markup HTML e script client.</summary>
      <returns>Stringa contenente testo non convalidato proveniente dal campo, dal cookie o dal valore della stringa di query specificato.</returns>
      <param name="request">Oggetto <see cref="T:System.Web.HttpRequest" /> contenente i valori da escludere dalla convalida.</param>
      <param name="key">Nome del campo da escludere dalla convalida.<paramref name="key" /> può fare riferimento a un campo del form, a un cookie o alla variabile della stringa di query.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase)">
      <summary>Restituisce tutti i valori dall'oggetto Request (inclusi i campi del form, i cookie e la stringa di query) senza prima verificare la presenza di markup HTML e script client.</summary>
      <returns>Oggetto contenente versioni non convalidate del form, del cookie e dei valori di stringhe di query.</returns>
      <param name="request">Oggetto <see cref="T:System.Web.HttpRequest" /> contenente i valori da escludere dalla convalida.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase,System.String)">
      <summary>Restituisce il valore specificato dall'oggetto Request senza prima verificare la presenza di markup HTML e script client.</summary>
      <returns>Stringa contenente testo non convalidato proveniente dal campo, dal cookie o dal valore della stringa di query specificato.</returns>
      <param name="request">Oggetto <see cref="T:System.Web.HttpRequestBase" /> contenente i valori da escludere dalla convalida.</param>
      <param name="key">Nome del campo da escludere dalla convalida.<paramref name="key" /> può fare riferimento a un campo del form, a un cookie o alla variabile della stringa di query.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpAntiForgeryException">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor">
      <summary>Questo membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String)">
      <summary>Questo membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice. Inizializza una nuova istanza della classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />.</summary>
      <param name="message">Messaggio contenente.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String,System.Exception)">
      <summary>Questo membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice. Inizializza una nuova istanza della classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />.</summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationEqualToRule">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationEqualToRule.#ctor(System.String,System.Object)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
      <param name="other">Altro.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationMaxLengthRule"></member>
    <member name="M:System.Web.Mvc.ModelClientValidationMaxLengthRule.#ctor(System.String,System.Int32)"></member>
    <member name="T:System.Web.Mvc.ModelClientValidationMinLengthRule"></member>
    <member name="M:System.Web.Mvc.ModelClientValidationMinLengthRule.#ctor(System.String,System.Int32)"></member>
    <member name="T:System.Web.Mvc.ModelClientValidationRangeRule">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRangeRule.#ctor(System.String,System.Object,System.Object)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
      <param name="minValue">Valore minimo.</param>
      <param name="maxValue">Valore massimo.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRegexRule">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRegexRule.#ctor(System.String,System.String)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice. Inizializza una nuova istanza della classe <see cref="T:System.Web.Mvc.ModelClientValidationRegexRule" />.</summary>
      <param name="errorMessage">Messaggio di eccezione.</param>
      <param name="pattern">Modello.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRemoteRule">
      <summary>Rappresenta la regola remota per la convalida del client del modello.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRemoteRule.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Mvc.ModelClientValidationRemoteRule" />.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
      <param name="url">URL della regola.</param>
      <param name="httpMethod">Metodo HTTP.</param>
      <param name="additionalFields">Campi aggiuntivi utilizzati.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRequiredRule">
      <summary>Rappresenta la regola richiesta per la convalida del client del modello.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRequiredRule.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Mvc.ModelClientValidationRequiredRule" />.</summary>
      <param name="errorMessage">Messaggio di errore. </param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRule">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRule.#ctor">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ErrorMessage">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationParameters">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationType">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationStringLengthRule">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Rappresenta una lunghezza della regola di convalida del client modello.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationStringLengthRule.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.Mvc.ModelClientValidationStringLengthRule" />.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
      <param name="minimumLength">Lunghezza minima della regola di convalida.</param>
      <param name="maximumLength">Lunghezza massima della regola di convalida.</param>
    </member>
    <member name="T:System.Web.Mvc.TagBuilder">
      <summary>Contiene classi e proprietà utilizzate per creare elementi HTML.Questa classe viene utilizzata per scrivere helper, ad esempio quelli trovati nello spazio dei nomi <see cref="N:System.Web.Helpers" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.#ctor(System.String)">
      <summary>Crea un nuovo tag con il nome specificato.</summary>
      <param name="tagName">Nome del tag senza delimitatori "&lt;", "/" o "&gt;".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tagName" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.AddCssClass(System.String)">
      <summary>Aggiunge una voce all'elenco delle classi CSS nel tag.</summary>
      <param name="value">Classe CSS da aggiungere.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.Attributes">
      <summary>Ottiene la raccolta di attributi.</summary>
      <returns>Raccolta di attributi.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String)">
      <summary>Sostituisce ciascun carattere non valido nell'ID del tag con un carattere HTML valido.</summary>
      <returns>ID del tag puro o null se <paramref name="originalId" /> è null o vuoto oppure se <paramref name="originalId" /> non inizia con una lettera.</returns>
      <param name="originalId">ID che può contenere caratteri da sostituire.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String,System.String)">
      <summary>Sostituisce ciascun carattere non valido nell'ID del tag con la stringa di sostituzione specificata.</summary>
      <returns>ID del tag puro o null se <paramref name="originalId" /> è null o vuoto oppure se <paramref name="originalId" /> non inizia con una lettera.</returns>
      <param name="originalId">ID che può contenere caratteri da sostituire.</param>
      <param name="invalidCharReplacement">Stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="invalidCharReplacement" /> è null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.GenerateId(System.String)">
      <summary>Genera un attributo ID puro per il tag in base al nome specificato.</summary>
      <param name="name">Nome da utilizzare per generare un attributo ID.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.IdAttributeDotReplacement">
      <summary>Ottiene o imposta una stringa che è possibile utilizzare per sostituire caratteri HTML non validi.</summary>
      <returns>Stringa da utilizzare per sostituire caratteri HTML non validi.</returns>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.InnerHtml">
      <summary>Ottiene o imposta il valore HTML interno per l'elemento.</summary>
      <returns>Valore HTML interno dell'elemento.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String)">
      <summary>Aggiunge un nuovo attributo al tag.</summary>
      <param name="key">Chiave per l'attributo.</param>
      <param name="value">Valore dell'attributo.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)">
      <summary>Aggiunge un nuovo attributo o, facoltativamente, ne sostituisce uno esistente nel tag di apertura.</summary>
      <param name="key">Chiave per l'attributo.</param>
      <param name="value">Valore dell'attributo.</param>
      <param name="replaceExisting">true per sostituire un attributo esistente, se è presente un attributo con il valore <paramref name="key" /> specificato, oppure false per lasciare invariato l'attributo originario.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})">
      <summary>Aggiunge nuovi attributi al tag.</summary>
      <param name="attributes">Raccolta di attributi da aggiungere.</param>
      <typeparam name="TKey">Tipo dell'oggetto chiave.</typeparam>
      <typeparam name="TValue">Tipo dell'oggetto valore.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
      <summary>Aggiunge nuovi attributi o, facoltativamente, sostituisce gli attributi esistenti nel tag.</summary>
      <param name="attributes">Raccolta di attributi da aggiungere o sostituire.</param>
      <param name="replaceExisting">Per ciascun attributo in <paramref name="attributes" />, true per sostituire l'attributo, se è già presente un attributo con la stessa chiave, oppure false per lasciare invariato l'attributo originario.</param>
      <typeparam name="TKey">Tipo dell'oggetto chiave.</typeparam>
      <typeparam name="TValue">Tipo dell'oggetto valore.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.SetInnerText(System.String)">
      <summary>Imposta la proprietà <see cref="P:System.Web.Mvc.TagBuilder.InnerHtml" /> dell'elemento su una versione codificata in formato HTML della stringa specificata.</summary>
      <param name="innerText">Stringa da codificare in formato HTML.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.TagName">
      <summary>Ottiene il nome per il tag.</summary>
      <returns>Nome.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString">
      <summary>Esegue il rendering dell'elemento come <see cref="F:System.Web.Mvc.TagRenderMode.Normal" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString(System.Web.Mvc.TagRenderMode)">
      <summary>Esegue il rendering del tag HTML in base alla modalità di rendering specificata.</summary>
      <returns>Tag HTML di cui è stato eseguito il rendering.</returns>
      <param name="renderMode">Modalità di rendering.</param>
    </member>
    <member name="T:System.Web.Mvc.TagRenderMode">
      <summary>Enumera le modalità disponibili per il rendering di tag HTML.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.EndTag">
      <summary>Rappresenta la modalità per il rendering di un tag di chiusura, ad esempio &lt;/tag&gt;.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.Normal">
      <summary>Rappresenta la modalità per il rendering di testo normale.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.SelfClosing">
      <summary>Rappresenta la modalità per il rendering di un tag di chiusura automatico, ad esempio &lt;tag /&gt;.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.StartTag">
      <summary>Rappresenta la modalità per il rendering di un tag di apertura, ad esempio &lt;tag&gt;.</summary>
    </member>
    <member name="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator.GetValidationAttributes(System.Collections.Generic.IEnumerable{System.Web.Mvc.ModelClientValidationRule},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene gli attributi di convalida dalla struttura o il contenuto di <see cref="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator" />.</summary>
      <param name="clientRules">
        <see cref="T:System.Web.Mvc.ModelClientValidationRule" /> da implementare.</param>
      <param name="results">Risultato della convalida.</param>
    </member>
    <member name="T:System.Web.WebPages.ApplicationPart">
      <summary>Contiene i metodi per registrare assembly come parti dell'applicazione.</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.#ctor(System.Reflection.Assembly,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.ApplicationPart" /> utilizzando l'assembly e il percorso virtuale radice specificati.</summary>
      <param name="assembly">Assembly.</param>
      <param name="rootVirtualPath">Percorso virtuale radice.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rootVirtualPath" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.ProcessVirtualPath(System.Reflection.Assembly,System.String,System.String)">
      <summary>Risolve un percorso dell'assembly specificato o della risorsa all'interno di un assembly specificata utilizzando il percorso virtuale di base e il percorso virtuale specificati.</summary>
      <returns>Percorso dell'assembly o della risorsa.</returns>
      <param name="assembly">Assembly.</param>
      <param name="baseVirtualPath">Percorso virtuale di base.</param>
      <param name="virtualPath">Percorso virtuale.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="assembly" /> non è registrato.</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.Register(System.Web.WebPages.ApplicationPart)">
      <summary>Aggiunge un assembly e tutte le pagine Web all'interno dell'assembly all'elenco delle parti dell'applicazione disponibili.</summary>
      <param name="applicationPart">Parte dell'applicazione.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="applicationPart" /> è già registrato.</exception>
    </member>
    <member name="T:System.Web.WebPages.ApplicationStartPage">
      <summary>Fornisce oggetti e metodi utilizzati per l'esecuzione e il rendering delle pagine di avvio delle applicazioni ASP.NET Web Pages (file _AppStart.cshtml o _AppStart.vbhtml).</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.ApplicationStartPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Application">
      <summary>Ottiene l'oggetto applicazione HTTP che fa riferimento alla pagina di avvio dell'applicazione.</summary>
      <returns>Oggetto applicazione HTTP che fa riferimento alla pagina di avvio dell'applicazione.</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.CacheKeyPrefix">
      <summary>Prefisso applicato a tutte le chiavi aggiunte alla cache dalla pagina di avvio dell'applicazione.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Context">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.HttpContextBase" /> che rappresenta i dati di contesto associati a questa pagina.</summary>
      <returns>Dati del contesto corrente.</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.GetOutputWriter">
      <summary>Restituisce l'istanza del writer di testo utilizzata per il rendering della pagina.</summary>
      <returns>Writer di testo.</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Markup">
      <summary>Ottiene l'output della pagina di avvio dell'applicazione sotto forma di stringa codificata in formato HTML.</summary>
      <returns>Output della pagina di avvio dell'applicazione sotto forma di stringa codificata in formato HTML.</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Output">
      <summary>Ottiene il writer di testo per la pagina.</summary>
      <returns>Writer di testo per la pagina.</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.StartPageVirtualPath">
      <summary>Percorso della pagina di avvio dell'applicazione.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.VirtualPath">
      <summary>Ottiene o imposta il percorso virtuale della pagina.</summary>
      <returns>Percorso virtuale.</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Object)">
      <summary>Scrive la rappresentazione stringa dell'oggetto specificato come stringa codificata in formato HTML.</summary>
      <param name="value">Oggetto da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>Scrive l'oggetto specificato <see cref="T:System.Web.WebPages.HelperResult" /> come stringa codificata in formato HTML.</summary>
      <param name="result">Risultato dell'helper da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.WriteLiteral(System.Object)">
      <summary>Scrive l'oggetto specificato senza codifica HTML.</summary>
      <param name="value">Oggetto da scrivere.</param>
    </member>
    <member name="T:System.Web.WebPages.AttributeValue">
      <summary>Memorizza il valore per un attributo.Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.#ctor(System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.Object},System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.AttributeValue" />.Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <param name="prefix">Prefisso dello spazio dei nomi per l'attributo.</param>
      <param name="value">Valore per l'attributo.</param>
      <param name="literal">true per indicare che il valore è un valore letterale. In caso contrario, false.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.Object,System.Int32},System.Boolean})">
      <summary>Crea un valore di attributo dall'oggetto tupla specificato.</summary>
      <returns>Valore dell'attributo creato.</returns>
      <param name="value">Oggetto tupla da cui creare.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.String,System.Int32},System.Boolean})">
      <summary>Crea un valore di attributo dall'oggetto tupla specificato.</summary>
      <returns>Valore dell'attributo creato.</returns>
      <param name="value">Oggetto tupla da cui creare.</param>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Literal">
      <summary>Ottiene o imposta un valore che indica se il valore è un valore letterale.Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <returns>true se il valore è un valore letterale. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.Object,System.Int32},System.Boolean})~System.Web.WebPages.AttributeValue">
      <summary>Crea un valore di attributo dall'oggetto tupla specificato.</summary>
      <returns>Valore dell'attributo creato.</returns>
      <param name="value">Oggetto tupla da cui creare.</param>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple{System.Tuple{System.String,System.Int32},System.Tuple{System.String,System.Int32},System.Boolean})~System.Web.WebPages.AttributeValue">
      <summary>Crea un valore di attributo dall'oggetto tupla specificato.</summary>
      <returns>Valore dell'attributo creato.</returns>
      <param name="value">Oggetto tupla da cui creare.</param>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Prefix">
      <summary>Ottiene è imposta il prefisso dello spazio dei nomi per l'attributo.Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <returns>Prefisso dello spazio dei nomi per l'attributo.</returns>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Value">
      <summary>Ottiene o imposta il valore per l'attributo.Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <returns>Valore per l'attributo.</returns>
    </member>
    <member name="T:System.Web.WebPages.BrowserHelpers">
      <summary>Fornisce una modalità per specificare informazioni personalizzate sul browser (agente utente).</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.ClearOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Rimuove qualsiasi agente utente sottoposto a override per la richiesta corrente.</summary>
      <param name="httpContext">Contesto corrente.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Restituisce l'oggetto funzionalità del browser per le funzionalità del browser sottoposto a override oppure per il browser effettivo, se non è stato specificato alcun override.</summary>
      <returns>Funzionalità del browser.</returns>
      <param name="httpContext">Contesto corrente.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Restituisce il valore dell'agente utente sottoposto a override oppure la stringa dell'agente utente effettivo, se non è stato specificato alcun override.</summary>
      <returns>Stringa dell'agente utente</returns>
      <param name="httpContext">Contesto corrente.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContext)">
      <summary>Ottiene una stringa che varia in base al tipo del browser.</summary>
      <returns>Stringa che identifica il browser.</returns>
      <param name="httpContext">Contesto corrente.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Ottiene una stringa che varia in base al tipo di browser. </summary>
      <returns>Stringa che identifica il browser.</returns>
      <param name="httpContext">Base del contesto corrente.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.String)">
      <summary>Esegue l'override del valore dell'agente utente effettivo della richiesta utilizzando l'agente utente specificato.</summary>
      <param name="httpContext">Contesto corrente.</param>
      <param name="userAgent">Agente utente da utilizzare.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)">
      <summary>Esegue l'override del valore dell'agente utente effettivo della richiesta utilizzando le informazioni di override del browser specificate.</summary>
      <param name="httpContext">Contesto corrente.</param>
      <param name="browserOverride">Un valore di enumerazione che rappresenta le informazioni di override del browser da utilizzare.</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverride">
      <summary>Specifica i tipi di browser che possono essere definiti per il metodo <see cref="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)" />.</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Desktop">
      <summary>Specifica un browser per desktop.</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Mobile">
      <summary>Specifica un browser per dispositivi mobili.</summary>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStore">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.BrowserOverrideStore corrente viene utilizzato per ottenere e impostare l'agente utente di una richiesta.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.#ctor">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.BrowserOverrideStore" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ricerca un agente utente eseguendo la ricerca del cookie di override del browser.</summary>
      <returns>Agente utente.</returns>
      <param name="httpContext">Contesto HTTP.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Aggiunge un cookie di override del browser con l'agente utente impostato alla risposta della richiesta corrente.</summary>
      <param name="httpContext">Contesto HTTP.</param>
      <param name="userAgent">Agente utente.</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStores">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStores.#ctor">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="P:System.Web.WebPages.BrowserOverrideStores.Current">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Web.WebPages.CookieBrowserOverrideStore">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene l'agente utente sottoposto a override per una richiesta da un cookie.Crea un cookie per impostare l'agent utente sottoposto a override.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.CookieBrowserOverrideStore" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor(System.Int32)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.CookieBrowserOverrideStore" />.</summary>
      <param name="daysToExpire">Giorni alla scadenza.</param>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ricerca un agente utente eseguendo la ricerca del cookie di override del browser.</summary>
      <returns>Agente utente.</returns>
      <param name="httpContext">Contesto HTTP.</param>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Aggiunge un cookie di override del browser con l'agente utente impostato alla risposta della richiesta corrente.</summary>
      <param name="httpContext">Contesto HTTP.</param>
      <param name="userAgent">Agente utente.</param>
    </member>
    <member name="T:System.Web.WebPages.DefaultDisplayMode">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Rappresenta la modalità di visualizzazione predefinita delle pagine Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.DefaultDisplayMode" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor(System.String)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.DefaultDisplayMode" />.</summary>
      <param name="suffix">Suffisso.</param>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Indica un valore se <see cref="T:System.Web.HttpContextBase" /> può gestire il contesto.</summary>
      <returns>true se <see cref="T:System.Web.HttpContextBase" /> può gestire il contesto. In caso contrario, false.</returns>
      <param name="httpContext">Contesto HTTP specificato.</param>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.ContextCondition">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene o imposta un valore che indica se la condizione del contesto visualizza una modalità predefinita.</summary>
      <returns>true se la condizione del contesto visualizza una modalità predefinita. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.DisplayModeId">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene l'identificatore della modalità di visualizzazione delle pagine Web.</summary>
      <returns>Identificatore della modalità di visualizzazione delle pagine Web.</returns>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
      <summary>Recupera le informazioni di visualizzazione relative a un elemento nel riquadro dei risultati.</summary>
      <returns>Informazioni di visualizzazione relative a un elemento nel riquadro dei risultati.</returns>
      <param name="httpContext">Contesto HTTP.</param>
      <param name="virtualPath">Percorso virtuale.</param>
      <param name="virtualPathExists">true se esiste il percorso virtuale. In caso contrario, false.</param>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.TransformPath(System.String,System.String)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Trasforma il percorso della modalità di visualizzazione.</summary>
      <returns>Il percorso della modalità di visualizzazione da trasformare.</returns>
      <param name="virtualPath">Percorso virtuale.</param>
      <param name="suffix">Suffisso.</param>
    </member>
    <member name="T:System.Web.WebPages.DisplayInfo">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Rappresenta un'informazioni sulla visualizzazione della proprietà.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayInfo.#ctor(System.String,System.Web.WebPages.IDisplayMode)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.DisplayInfo" />.</summary>
      <param name="filePath">Percorso virtuale.</param>
      <param name="displayMode">Modalità di visualizzazione attiva.</param>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.DisplayMode">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene la modalità di visualizzazione attiva per una pagina Web.</summary>
      <returns>Modalità di visualizzazione attiva per una pagina Web.</returns>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.FilePath">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene il percorso virtuale della pagina Web corrente.</summary>
      <returns>Percorso virtuale della pagina Web corrente.</returns>
    </member>
    <member name="T:System.Web.WebPages.DisplayModeProvider">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Rappresenta le modalità di visualizzazione del provider.</summary>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.DefaultDisplayModeId">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Definisce l'identificatore della modalità di visualizzazione predefinita.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetAvailableDisplayModesForContext(System.Web.HttpContextBase,System.Web.WebPages.IDisplayMode)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene un elenco delle modalità di visualizzazioni disponibili per la base del contesto.</summary>
      <returns>Elenco delle modalità di visualizzazioni disponibili per la base del contesto.</returns>
      <param name="httpContext">Base del contesto HTTP.</param>
      <param name="currentDisplayMode">Modalità di visualizzazione corrente.</param>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetDisplayInfoForVirtualPath(System.String,System.Web.HttpContextBase,System.Func{System.String,System.Boolean},System.Web.WebPages.IDisplayMode)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene <see cref="T:System.Web.WebPages.DisplayInfo" /> per il percorso virtuale.</summary>
      <returns>
        <see cref="T:System.Web.WebPages.DisplayInfo" /> per il percorso virtuale.</returns>
      <param name="virtualPath">Percorso virtuale.</param>
      <param name="httpContext">Base del contesto HTTP.</param>
      <param name="virtualPathExists">true se esiste il percorso virtuale. In caso contrario, false..</param>
      <param name="currentDisplayMode">Modalità di visualizzazione corrente.</param>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Instance">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene l'istanza di <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</summary>
      <returns>Istanza di <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</returns>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.MobileDisplayModeId">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Definisce l'identificatore della modalità di visualizzazione mobile.</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Modes">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene un elenco di modalità di <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</summary>
      <returns>Elenco di modalità di <see cref="T:System.Web.WebPages.DisplayModeProvider" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.RequireConsistentDisplayMode">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene o imposta un valore che indica se la pagina Web richiede una modalità di visualizzazione coerente.</summary>
      <returns>true se la pagina Web richiede una modalità di visualizzazione coerente. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.WebPages.HelperPage">
      <summary>Rappresenta una classe base per le pagine che viene utilizzata quando ASP.NET compila un file cshtml o vbhtml e che espone metodi e proprietà a livello di pagina e a livello di applicazione.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.#ctor">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.HelperPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.App">
      <summary>Ottiene i dati di stato dell'applicazione come oggetto <see cref="T:System.Dynamic.DynamicObject" /> che può essere utilizzato dai chiamanti per creare e visualizzare le proprietà personalizzate aventi come ambito l'applicazione.</summary>
      <returns>Dati di stato dell'applicazione.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.AppState">
      <summary>Ottiene un riferimento ai dati di stato dell'applicazione globali che è possibile condividere nelle sessioni e nelle richieste di un'applicazione ASP.NET.</summary>
      <returns>Dati di stato dell'applicazione.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Colloca tutte le istruzioni dell'helper nel contesto della pagina dell'helper.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="virtualPath">Percorso virtuale dell'helper.</param>
      <param name="startPosition">Posizione iniziale.</param>
      <param name="length">Lunghezza del contesto.</param>
      <param name="isLiteral">true se il contesto ha un attributo letterale. In caso contrario, false.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Colloca tutte le istruzioni dell'helper nel contesto della pagina dell'helper.</summary>
      <param name="virtualPath">Percorso virtuale dell'helper.</param>
      <param name="startPosition">Posizione iniziale.</param>
      <param name="length">Lunghezza del contesto.</param>
      <param name="isLiteral">true se il contesto ha un attributo letterale. In caso contrario, false.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Cache">
      <summary>Ottiene l'oggetto della cache per il dominio dell'applicazione corrente.</summary>
      <returns>Oggetto della cache.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Context">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.HttpContextBase" /> associato a una pagina.</summary>
      <returns>Dati del contesto corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.CurrentPage">
      <summary>Ottiene la pagina corrente per questa pagina dell'helper.</summary>
      <returns>Pagina corrente.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Indica la fine del blocco di contesto.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="virtualPath">Percorso virtuale dell'helper.</param>
      <param name="startPosition">Posizione iniziale.</param>
      <param name="length">Lunghezza del contesto.</param>
      <param name="isLiteral">true se il contesto ha un attributo letterale. In caso contrario, false.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Indica la fine del blocco di contesto.</summary>
      <param name="virtualPath">Percorso virtuale dell'helper.</param>
      <param name="startPosition">Posizione iniziale.</param>
      <param name="length">Lunghezza del contesto.</param>
      <param name="isLiteral">true se il contesto ha un attributo letterale. In caso contrario, false.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.HelperVirtualPath">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene o imposta il percorso della pagina dell'helper.</summary>
      <returns>Percorso della pagina dell'helper.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.Href(System.String,System.Object[])">
      <summary>Crea un URL assoluto in base a un URL relativo dell'applicazione utilizzando i parametri specificati.</summary>
      <returns>URL assoluto.</returns>
      <param name="path">Percorso iniziale da utilizzare nell'URL.</param>
      <param name="pathParts">Informazioni aggiuntive sul percorso, quali cartelle e sottocartelle.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Html">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.WebPages.Html.HtmlHelper" /> associato a una pagina.</summary>
      <returns>Oggetto che supporta il rendering di controlli dei form HTML in una pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsAjax">
      <summary>Ottiene un valore che indica se durante la richiesta della pagina Web viene utilizzato Ajax.</summary>
      <returns>true se durante la richiesta viene utilizzato Ajax. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsPost">
      <summary>Ottiene un valore che indica se la richiesta corrente è una richiesta POST (inviata utilizzando il verbo POST HTTP).</summary>
      <returns>true se il verbo HTTP è POST. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Model">
      <summary>Ottiene il modello associato a una pagina.</summary>
      <returns>Oggetto che rappresenta un modello associato ai dati della visualizzazione di una pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.ModelState">
      <summary>Ottiene i dati di stato per il modello associato a una pagina.</summary>
      <returns>Stato del modello.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Page">
      <summary>Ottiene l'accesso di tipo proprietà ai dati di pagina condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Oggetto contenente dati di pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageContext">
      <summary>Ottiene o imposta il contesto HTTP per la pagina Web.</summary>
      <returns>Contesto HTTP per la pagina Web.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageData">
      <summary>Ottiene l'accesso di tipo matrice ai dati di pagina condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Oggetto che fornisce l'accesso di tipo matrice ai dati di pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Request">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.HttpRequest" /> per la richiesta HTTP corrente.</summary>
      <returns>Oggetto <see cref="T:System.Web.HttpRequest" /> contenente i valori HTTP inviati da un client durante una richiesta Web.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Response">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.HttpResponse" /> per la risposta HTTP corrente.</summary>
      <returns>Oggetto <see cref="T:System.Web.HttpResponse" /> contenente le informazioni relative alla risposta HTTP di un'operazione ASP.NET.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Server">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.HttpServerUtility" /> che fornisce i metodi utilizzabili come parte dell'elaborazione di pagine Web.</summary>
      <returns>Oggetto <see cref="T:System.Web.HttpServerUtility" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Session">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.HttpSessionState" /> per la richiesta HTTP corrente.</summary>
      <returns>Oggetto <see cref="T:System.Web.HttpSessionState" /> per la richiesta HTTP corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.UrlData">
      <summary>Ottiene i dati correlati al percorso URL.</summary>
      <returns>Dati correlati al percorso URL.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.User">
      <summary>Ottiene un valore utente basato sul contesto HTTP.</summary>
      <returns>Valore utente basato sul contesto HTTP.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.VirtualPath">
      <summary>Ottiene il percorso virtuale della pagina.</summary>
      <returns>Percorso virtuale.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Scrive un attributo associato all'helper.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="name">Nome dell'attributo.</param>
      <param name="prefix">Prefisso.</param>
      <param name="suffix">Suffisso.</param>
      <param name="values">Valore dell'attributo.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Scrive un oggetto letterale nell'helper.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="value">Valore dell'oggetto.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Scrive un oggetto risultato dell'helper nell'helper.</summary>
      <param name="writer">Writer di testo</param>
      <param name="value">Risultato dell'helper.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Scrive un oggetto nell'helper.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="value">Valore dell'oggetto.</param>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Scrive un oggetto risultato dell'helper nell'helper.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="value">Valore del risultato dell'helper.</param>
    </member>
    <member name="T:System.Web.WebPages.HelperResult">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.#ctor(System.Action{System.IO.TextWriter})">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToHtmlString">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToString">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.WriteTo(System.IO.TextWriter)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Web.WebPages.HttpContextExtensions">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RedirectLocal(System.Web.HttpContextBase,System.String)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RegisterForDispose(System.Web.HttpContextBase,System.IDisposable)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Web.WebPages.IDisplayMode">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Rappresenta l'interfaccia della modalità di visualizzazione per le pagine Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Indica un valore se le pagine Web sono in grado di gestire il contesto HTTP.</summary>
      <returns>true se le pagine Web sono in grado di gestire il contesto HTTP. In caso contrario, false.</returns>
      <param name="httpContext">Contesto HTTP.</param>
    </member>
    <member name="P:System.Web.WebPages.IDisplayMode.DisplayModeId">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene l'ID della modalità di visualizzazione per le pagine Web.</summary>
      <returns>ID modalità di visualizzazione per le pagine Web.</returns>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
      <summary>Restituisce questo metodo per visualizzare tutte le informazioni per le pagine Web.</summary>
      <returns>Metodo per visualizzare tutte le informazioni per le pagine Web.</returns>
      <param name="httpContext">Contesto HTTP.</param>
      <param name="virtualPath">Percorso virtuale.</param>
      <param name="virtualPathExists">true se esiste il percorso virtuale. In caso contrario, false..</param>
    </member>
    <member name="T:System.Web.WebPages.ITemplateFile">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="P:System.Web.WebPages.ITemplateFile.TemplateInfo">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Web.WebPages.IValidator">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Definisce le proprietà e i metodi per gli oggetti che partecipano nelle pagine Web.</summary>
    </member>
    <member name="P:System.Web.WebPages.IValidator.ClientValidationRule">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene un contenitore per la convalida del client per il campo obbligatorio.</summary>
      <returns>Contenitore per la convalida del client per il campo obbligatorio.</returns>
    </member>
    <member name="M:System.Web.WebPages.IValidator.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Valuta la condizione che controlla e aggiorna il contesto di convalida.</summary>
      <returns>Condizione che controlla e aggiorna il contesto di convalida.</returns>
      <param name="validationContext">Contesto di convalida.</param>
    </member>
    <member name="T:System.Web.WebPages.IVirtualPathFactory">
      <summary>Definisce i metodi implementati dalle handler factory per percorsi virtuali.</summary>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.CreateInstance(System.String)">
      <summary>Crea una handler factory per il percorso virtuale specificato.</summary>
      <returns>Handler factory per il percorso virtuale specificato.</returns>
      <param name="virtualPath">Percorso virtuale.</param>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.Exists(System.String)">
      <summary>Determina se il percorso virtuale specificato è associato a una handler factory.</summary>
      <returns>true se per il percorso virtuale specificato esiste una handler factory. In caso contrario, false.</returns>
      <param name="virtualPath">Percorso virtuale.</param>
    </member>
    <member name="T:System.Web.WebPages.IWebPageRequestExecutor">
      <summary>Definisce i metodi per implementare una classe esecutore in grado di eseguire il codice in una pagina Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.IWebPageRequestExecutor.Execute(System.Web.WebPages.WebPage)">
      <summary>Esegue il codice nella pagina Web specificata.</summary>
      <returns>true se l'esecutore gestisce l'esecuzione della pagina Web. In caso contrario, false.</returns>
      <param name="page">Pagina Web.</param>
    </member>
    <member name="T:System.Web.WebPages.PageVirtualPathAttribute">
      <summary>Rappresenta un attributo di percorso per una classe di pagine Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.PageVirtualPathAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.PageVirtualPathAttribute" /> utilizzando il percorso virtuale specificato.</summary>
      <param name="virtualPath">Percorso virtuale.</param>
    </member>
    <member name="P:System.Web.WebPages.PageVirtualPathAttribute.VirtualPath">
      <summary>Ottiene il percorso virtuale della pagina Web corrente.</summary>
      <returns>Percorso virtuale.</returns>
    </member>
    <member name="T:System.Web.WebPages.PreApplicationStartCode">
      <summary>Fornisce un punto di registrazione per il codice di preavvio dell'applicazione per le pagine Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.PreApplicationStartCode.Start">
      <summary>Registra il codice di preavvio dell'applicazione per le pagine Web.</summary>
    </member>
    <member name="T:System.Web.WebPages.RequestExtensions">
      <summary>Definisce i metodi di estensione per la classe <see cref="T:System.Web.HttpRequestBase" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestExtensions.IsUrlLocalToHost(System.Web.HttpRequestBase,System.String)">
      <summary>Determina se l'URL specificato fa riferimento al computer locale.</summary>
      <returns>true se l'URL specificato fa riferimento al computer locale. In caso contrario, false.</returns>
      <param name="request">Oggetto richiesta HTTP.</param>
      <param name="url">URL da testare.</param>
    </member>
    <member name="T:System.Web.WebPages.RequestFieldValidatorBase">
      <summary>Funge da classe di base astratta per le classi helper di convalida.</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe derivata e specifica il nome dell'elemento HTML in fase di convalida.</summary>
      <param name="errorMessage">Nome (valore dell'attributo name) dell'elemento di input utente da convalidare.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe derivata, registra la stringa specificata come messaggio di errore da visualizzare se non viene fornito alcun valore e specifica se il metodo può utilizzare dati non convalidati.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
      <param name="useUnvalidatedValues">true per utilizzare input utente non convalidati; false per rifiutare i dati non convalidati.Il parametro viene impostato su true chiamando metodi nei casi in cui il valore effettivo dell'input utente non è importante, ad esempio per i campi obbligatori.</param>
    </member>
    <member name="P:System.Web.WebPages.RequestFieldValidatorBase.ClientValidationRule">
      <summary>Se implementato in una classe derivata, ottiene un contenitore per la convalida client per il campo obbligatorio.</summary>
      <returns>Contenitore.</returns>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetHttpContext(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Restituisce il contesto HTTP della richiesta corrente.</summary>
      <returns>Contesto.</returns>
      <param name="validationContext">Contesto di convalida.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetRequestValue(System.Web.HttpRequestBase,System.String)">
      <summary>Restituisce il valore da convalidare.</summary>
      <returns>Valore da convalidare.</returns>
      <param name="request">Richiesta corrente.</param>
      <param name="field">Nome del campo della richiesta corrente da convalidare.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.IsValid(System.Web.HttpContextBase,System.String)">
      <summary>Restituisce un valore che indica se il valore specificato è valido.</summary>
      <returns>true se il valore è valido. In caso contrario, false.</returns>
      <param name="httpContext">Contesto corrente.</param>
      <param name="value">Valore da convalidare.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Esegue il test di convalida.</summary>
      <returns>Risultato del test di convalida.</returns>
      <param name="validationContext">Contesto.</param>
    </member>
    <member name="T:System.Web.WebPages.ResponseExtensions">
      <summary>Definisce i metodi di estensione per la <see cref="T:System.Web.HttpResponseBase" /> classe base.</summary>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.OutputCache(System.Web.HttpResponseBase,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Web.HttpCacheability)">
      <summary>Configura i criteri di cache di un'istanza di risposta HTTP.</summary>
      <param name="response">Istanza di risposta HTTP.</param>
      <param name="numberOfSeconds">Periodo di tempo, in secondi, prima della scadenza degli elementi nella cache.</param>
      <param name="sliding">true per indicare che gli elementi scadono nella cache in base a un criterio di avvicendamento; false per indicare che gli elementi scadono quando raggiungono la scadenza predefinita.</param>
      <param name="varyByParams">Elenco di tutti i parametri che possono essere ricevuti da un'operazione GET o POST che influiscono sulla memorizzazione nella cache.</param>
      <param name="varyByHeaders">Elenco di tutte le intestazioni HTTP che influiscono sulla memorizzazione nella cache.</param>
      <param name="varyByContentEncodings">Elenco di tutte le intestazioni Content-Encoding che influiscono sulla memorizzazione nella cache.</param>
      <param name="cacheability">Un valore di enumerazione che specifica come gli elementi vengono memorizzati nella cache.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Int32)">
      <summary>Imposta il codice di stato HTTP di una risposta HTTP utilizzando il valore Integer specificato.</summary>
      <param name="response">Istanza di risposta HTTP.</param>
      <param name="httpStatusCode">Codice di stato HTTP.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Net.HttpStatusCode)">
      <summary>Imposta il codice di stato HTTP di una risposta HTTP utilizzando il valore di enumerazione del codice di stato HTTP specificato.</summary>
      <param name="response">Istanza di risposta HTTP.</param>
      <param name="httpStatusCode">Codice di stato HTTP.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[])">
      <summary>Scrive una sequenza di byte che rappresentano contenuto binario di un tipo non specificato nel flusso di output di una risposta HTTP.</summary>
      <param name="response">Istanza di risposta HTTP.</param>
      <param name="data">Matrice contenente i byte da scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[],System.String)">
      <summary>Scrive una sequenza di byte che rappresentano contenuto binario del tipo MIME specificato nel flusso di output di una risposta HTTP.</summary>
      <param name="response">Istanza di risposta HTTP di destinazione.</param>
      <param name="data">Matrice contenente i byte da scrivere.</param>
      <param name="mimeType">Tipo MIME del contenuto binario.</param>
    </member>
    <member name="T:System.Web.WebPages.SectionWriter">
      <summary>Fornisce un delegato che rappresenta uno o più metodi che vengono chiamati quando viene scritta una sezione di contenuto.</summary>
    </member>
    <member name="T:System.Web.WebPages.StartPage">
      <summary>Fornisce metodi e proprietà utilizzati per il rendering delle pagine di avvio che utilizzano il motore di visualizzazione Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.StartPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.StartPage.ChildPage">
      <summary>Ottiene o imposta la pagina figlio della pagina di avvio corrente.</summary>
      <returns>Pagina figlio della pagina di avvio corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Context">
      <summary>Ottiene o imposta il contesto della pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Contesto della pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.ExecutePageHierarchy">
      <summary>Chiama i metodi utilizzati per eseguire il codice scritto dallo sviluppatore nella pagina di avvio _PageStart e nella pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetOutputWriter">
      <summary>Restituisce l'istanza del writer di testo utilizzata per il rendering della pagina.</summary>
      <returns>Writer di testo.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetStartPage(System.Web.WebPages.WebPageRenderingBase,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Restituisce la pagina di inizializzazione per la pagina specificata.</summary>
      <returns>Pagina _AppStart, se esistente.Se la pagina _AppStart non viene trovata, restituisce la pagina _PageStart, se esistente.Se è impossibile trovare le pagine _AppStart e _PageStart, restituisce <paramref name="page" />.</returns>
      <param name="page">Pagina.</param>
      <param name="fileName">Nome file della pagina.</param>
      <param name="supportedExtensions">Insieme di estensioni di file che possono contenere sintassi ASP.NET Razor, come "cshtml" e "vbhtml".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> o <paramref name="fileName" /> sono null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="supportedExtensions" /> è null o vuoto.</exception>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Layout">
      <summary>Ottiene o imposta il percorso della pagina di layout per la pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Percorso della pagina di layout per la pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Page">
      <summary>Ottiene l'accesso di tipo proprietà ai dati della pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Oggetto contenente dati di pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.PageData">
      <summary>Ottiene l'accesso di tipo proprietà ai dati della pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Oggetto che fornisce l'accesso di tipo matrice ai dati della pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RenderPage(System.String,System.Object[])">
      <summary>Esegue il rendering della pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Markup HTML che rappresenta la pagina Web.</returns>
      <param name="path">Percorso della pagina di cui eseguire il rendering.</param>
      <param name="data">Dati aggiuntivi utilizzati per eseguire il rendering della pagina.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RunPage">
      <summary>Esegue il codice scritto dallo sviluppatore nella pagina <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Object)">
      <summary>Scrive la rappresentazione stringa dell'oggetto specificato come stringa codificata in formato HTML.</summary>
      <param name="value">Oggetto da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>Scrive la rappresentazione stringa dell'oggetto <see cref="T:System.Web.WebPages.HelperResult" /> specificato come stringa codificata in formato HTML.</summary>
      <param name="result">Risultato dell'helper da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.WriteLiteral(System.Object)">
      <summary>Scrive la rappresentazione stringa dell'oggetto specificato senza codifica HTML.</summary>
      <param name="value">Oggetto da scrivere.</param>
    </member>
    <member name="T:System.Web.WebPages.StringExtensions">
      <summary>Fornisce metodi di utilità per convertire valori di stringa in altri tipi di dati.</summary>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String)">
      <summary>Converte una stringa in un valore fortemente tipizzato del tipo di dati specificato.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
      <typeparam name="TValue">Tipo di dati in cui eseguire la conversione.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String,``0)">
      <summary>Converte una stringa nel tipo di dati specificato e specifica un valore predefinito.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
      <param name="defaultValue">Valore da restituire se <paramref name="value" /> è null.</param>
      <typeparam name="TValue">Tipo di dati in cui eseguire la conversione.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String)">
      <summary>Converte una stringa in un valore booleano (true/false).</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String,System.Boolean)">
      <summary>Converte una stringa in un valore booleano (true/false) e specifica un valore predefinito.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
      <param name="defaultValue">Valore da restituire se <paramref name="value" /> è null o non è valido.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String)">
      <summary>Converte una stringa in un <see cref="T:System.DateTime" /> valore.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String,System.DateTime)">
      <summary>Converte una stringa in un valore <see cref="T:System.DateTime" /> e specifica un valore predefinito.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
      <param name="defaultValue">Valore da restituire se <paramref name="value" /> è null o non è valido.Il valore predefinito è il valore minimo nel sistema.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String)">
      <summary>Converte una stringa in un numero <see cref="T:System.Decimal" />.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String,System.Decimal)">
      <summary>Converte una stringa in un numero <see cref="T:System.Decimal" /> e specifica un valore predefinito.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
      <param name="defaultValue">Valore da restituire se <paramref name="value" /> è null o non è valido.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String)">
      <summary>Converte una stringa in un numero <see cref="T:System.Single" />.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String,System.Single)">
      <summary>Converte una stringa in un numero <see cref="T:System.Single" /> e specifica un valore predefinito.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
      <param name="defaultValue">Valore da restituire se <paramref name="value" /> è null.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String)">
      <summary>Converte una stringa in un numero intero.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String,System.Int32)">
      <summary>Converte una stringa in un numero intero e specifica un valore predefinito.</summary>
      <returns>Valore convertito.</returns>
      <param name="value">Valore da convertire.</param>
      <param name="defaultValue">Valore da restituire se <paramref name="value" /> è null o non è valido.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.Is``1(System.String)">
      <summary>Verifica se una stringa può essere convertita nel tipo di dati specificato.</summary>
      <returns>true se <paramref name="value" /> può essere convertito nel tipo specificato. In caso contrario, false.</returns>
      <param name="value">Valore da testare.</param>
      <typeparam name="TValue">Tipo di dati in cui eseguire la conversione.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsBool(System.String)">
      <summary>Verifica se una stringa può essere convertita nel tipo booleano (true/false).</summary>
      <returns>true se <paramref name="value" /> può essere convertito nel tipo specificato. In caso contrario, false.</returns>
      <param name="value">Valore della stringa da testare.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDateTime(System.String)">
      <summary>Verifica se una stringa può essere convertita nel tipo <see cref="T:System.DateTime" />.</summary>
      <returns>true se <paramref name="value" /> può essere convertito nel tipo specificato. In caso contrario, false.</returns>
      <param name="value">Valore della stringa da testare.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDecimal(System.String)">
      <summary>Verifica se una stringa può essere convertita nel tipo <see cref="T:System.Decimal" />.</summary>
      <returns>true se <paramref name="value" /> può essere convertito nel tipo specificato. In caso contrario, false.</returns>
      <param name="value">Valore della stringa da testare.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsEmpty(System.String)">
      <summary>Verifica se un valore di stringa è null o vuoto.</summary>
      <returns>true se <paramref name="value" /> è null o una stringa di lunghezza zero (""). In caso contrario, false.</returns>
      <param name="value">Valore della stringa da testare.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsFloat(System.String)">
      <summary>Verifica se una stringa può essere convertita nel tipo <see cref="T:System.Single" />.</summary>
      <returns>true se <paramref name="value" /> può essere convertito nel tipo specificato. In caso contrario, false.</returns>
      <param name="value">Valore della stringa da testare.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsInt(System.String)">
      <summary>Verifica se una stringa può essere convertita in un numero intero.</summary>
      <returns>true se <paramref name="value" /> può essere convertito nel tipo specificato. In caso contrario, false.</returns>
      <param name="value">Valore della stringa da testare.</param>
    </member>
    <member name="T:System.Web.WebPages.TemplateFileInfo">
      <summary>Contiene metodi e proprietà che descrivono un modello di informazioni dei file.</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateFileInfo.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.TemplateFileInfo" /> utilizzando il percorso virtuale specificato.</summary>
      <param name="virtualPath">Percorso virtuale.</param>
    </member>
    <member name="P:System.Web.WebPages.TemplateFileInfo.VirtualPath">
      <summary>Ottiene il percorso virtuale della pagina Web.</summary>
      <returns>Percorso virtuale.</returns>
    </member>
    <member name="T:System.Web.WebPages.TemplateStack">
      <summary>Rappresenta un insieme LIFO (Last In First Out) di file modello <see cref="T:System.Web.WebPages.ITemplateFile" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.GetCurrentTemplate(System.Web.HttpContextBase)">
      <summary>Restituisce il file modello corrente dal contesto HTTP specificato.</summary>
      <returns>File modello, rimosso in cima allo stack.</returns>
      <param name="httpContext"> Contesto HTTP contenente lo stack in cui vengono memorizzati i file modello.</param>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Pop(System.Web.HttpContextBase)">
      <summary>Rimuove e restituisce il file modello in cima allo stack nel contesto HTTP specificato.</summary>
      <returns>File modello, rimosso in cima allo stack.</returns>
      <param name="httpContext">Contesto HTTP contenente lo stack in cui vengono memorizzati i file modello.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> è null..</exception>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Push(System.Web.HttpContextBase,System.Web.WebPages.ITemplateFile)">
      <summary>Inserisce un file modello in cima allo stack nel contesto HTTP specificato.</summary>
      <param name="httpContext">Contesto HTTP contenente lo stack in cui vengono memorizzati i file modello.</param>
      <param name="templateFile">File modello di cui effettuare il push nello stack specificato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> o <paramref name="templateFile" /> è null..</exception>
    </member>
    <member name="T:System.Web.WebPages.ValidationHelper">
      <summary>Implementa la convalida per l'input utente.</summary>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.Collections.Generic.IEnumerable{System.String},System.Web.WebPages.IValidator[])">
      <summary>Registra un elenco di elementi di input utente per la convalida.</summary>
      <param name="fields">Nomi (valore dell'attributo name) degli elementi di input utente da convalidare.</param>
      <param name="validators">Tipo di convalida da registrare per ciascun elemento di input utente specificato in <paramref name="fields" />.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])">
      <summary>Registra un elemento di input utente per la convalida.</summary>
      <param name="field">Nome (valore dell'attributo name) dell'elemento di input utente da convalidare.</param>
      <param name="validators">Elenco di uno o più tipi di convalida da registrare.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.AddFormError(System.String)">
      <summary>Aggiunge un messaggio di errore.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.ClassFor(System.String)">
      <summary>Esegue il rendering di un attributo che fa riferimento alla definizione di stile CSS da utilizzare per il rendering di messaggi di convalida per l'elemento di input utente.</summary>
      <returns>Attributo.</returns>
      <param name="field">Nome (valore dell'attributo name) dell'elemento di input utente da convalidare.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.For(System.String)">
      <summary>Esegue il rendering degli attributi che consentono la convalida sul lato client per un singolo elemento di input utente.</summary>
      <returns>Attributi di cui eseguire il rendering.</returns>
      <param name="field">Nome (valore dell'attributo name) dell'elemento di input utente da convalidare.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.FormField">
      <summary>Ottiene il nome del form corrente.Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <returns>Nome.</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.GetErrors(System.String[])">
      <summary>Restituisce un elenco degli errori di convalida correnti e, facoltativamente, consente di specificare un elenco di campi da controllare.</summary>
      <returns>Elenco degli errori.</returns>
      <param name="fields">Facoltativo.Nome (valore dell'attributo name) degli elementi di input utente per cui ottenere informazioni sugli errori.È possibile specificare un numero qualsiasi di nomi di elemento, separati da virgole.Se non si specifica un elenco di campi, il metodo restituisce gli errori per tutti i campi.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.InvalidCssClass">
      <summary>Ottiene il nome della classe utilizzata per specificare l'aspetto della visualizzazione dei messaggi di errore quando si sono verificati errori.Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <returns>Nome.</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.IsValid(System.String[])">
      <summary>Determina se il contenuto dei campi di input utente supera i controlli di convalida e, facoltativamente, consente di specificare un elenco di campi da controllare.</summary>
      <returns>true se tutti i campi specificati superano i controlli di convalida; false se qualsiasi campo contiene un errore di convalida.</returns>
      <param name="fields">Facoltativo.Nomi (valore dell'attributo name) degli elementi di input utente in cui cercare errori di convalida.È possibile specificare un numero qualsiasi di nomi di elemento, separati da virgole.Se non si specifica un elenco di campi, il metodo controlla tutti gli elementi registrati per la convalida.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String)">
      <summary>Registra il campo specificato come un campo che richiede l'immissione di dati da parte dell'utente.</summary>
      <param name="field">Nome (valore dell'attributo name) dell'elemento di input utente da convalidare.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String,System.String)">
      <summary>Registra il campo specificato come un campo che richiede l'immissione di dati da parte dell'utente e registra la stringa specificata come messaggio di errore da visualizzare se non viene fornito alcun valore.</summary>
      <param name="field">Nome (valore dell'attributo name) dell'elemento di input utente da convalidare.</param>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireFields(System.String[])">
      <summary>Registra i campi specificati come campi che richiedono l'immissione di dati da parte dell'utente.</summary>
      <param name="fields">Nomi (valore dell'attributo name) degli elementi di input utente da convalidare.È possibile specificare un numero qualsiasi di nomi di elemento, separati da virgole.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Validate(System.String[])">
      <summary>Esegue la convalida sugli elementi registrati a tale scopo e, facoltativamente, consente di specificare un elenco di campi da controllare.</summary>
      <returns>Elenco degli errori per i campi specificati, se si sono verificati errori di convalida.</returns>
      <param name="fields">Facoltativo.Nomi (valore dell'attributo name) degli elementi di input utente da convalidare.È possibile specificare un numero qualsiasi di nomi di elemento, separati da virgole.Se non si specifica un elenco, il metodo convalida tutti gli elementi registrati.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.ValidCssClass">
      <summary>Ottiene il nome della classe utilizzata per specificare l'aspetto della visualizzazione dei messaggi di errore quando si sono verificati errori.Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <returns>Nome.</returns>
    </member>
    <member name="T:System.Web.WebPages.Validator">
      <summary>Definisce i test di convalida che possono essere registrati mediante il metodo <see cref="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Validator" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.DateTime(System.String)">
      <summary>Definisce un test di convalida che consente di verificare se un valore può essere considerato come un valore di data/ora.</summary>
      <returns>Test di convalida.</returns>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Decimal(System.String)">
      <summary>Definisce un test di convalida che consente di verificare se un valore può essere considerato come un numero decimale.</summary>
      <returns>Test di convalida.</returns>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.EqualsTo(System.String,System.String)">
      <summary>Definisce un test di convalida che consente di verificare l'input utente rispetto al valore di un altro campo.</summary>
      <returns>Test di convalida.</returns>
      <param name="otherFieldName">Altro campo da confrontare.</param>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Float(System.String)">
      <summary>Definisce un test di convalida che consente di verificare se un valore può essere considerato come un numero a virgola mobile.</summary>
      <returns>Test di convalida.</returns>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Integer(System.String)">
      <summary>Definisce un test di convalida che consente di verificare se un valore può essere considerato come un numero intero.</summary>
      <returns>Test di convalida.</returns>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Double,System.Double,System.String)">
      <summary>Definisce un test di convalida che consente di verificare se un numero decimale è compreso in un intervallo specifico.</summary>
      <returns>Test di convalida.</returns>
      <param name="minValue">Valore minimo.Il valore predefinito è 0.</param>
      <param name="maxValue">Valore massimo.</param>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Int32,System.Int32,System.String)">
      <summary>Definisce un test di convalida che consente di verificare se un valore Integer è compreso in un intervallo specifico.</summary>
      <returns>Test di convalida.</returns>
      <param name="minValue">Valore minimo.Il valore predefinito è 0.</param>
      <param name="maxValue">Valore massimo. </param>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Regex(System.String,System.String)">
      <summary>Definisce un test di convalida che consente di verificare un valore rispetto a un criterio specificato come espressione regolare.</summary>
      <returns>Test di convalida.</returns>
      <param name="pattern">Espressione regolare da utilizzare per verificare l'input utente.</param>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Required(System.String)">
      <summary>Definisce un test di convalida che consente di verificare se è stato fornito un valore.</summary>
      <returns>Test di convalida.</returns>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.StringLength(System.Int32,System.Int32,System.String)">
      <summary>Definisce un test di convalida che consente di verificare la lunghezza di una stringa.</summary>
      <returns>Test di convalida.</returns>
      <param name="maxLength">Lunghezza massima della stringa.</param>
      <param name="minLength">Lunghezza minima della stringa.Il valore predefinito è 0.</param>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Url(System.String)">
      <summary>Definisce un test di convalida che consente di verificare se un valore è un URL in formato corretto.</summary>
      <returns>Test di convalida.</returns>
      <param name="errorMessage">Messaggio di errore da visualizzare se la convalida ha esito negativo.</param>
    </member>
    <member name="T:System.Web.WebPages.VirtualPathFactoryManager">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.CreateInstance(System.String)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.Exists(System.String)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.RegisterVirtualPathFactory(System.Web.WebPages.IVirtualPathFactory)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPage">
      <summary>Rappresenta una pagina ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPage.#ctor">
      <summary>Chiamato da una classe derivata per creare una nuova istanza basata sulla classe <see cref="T:System.Web.WebPages.WebPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Context">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Web.HttpContextBase" /> associato a una pagina.</summary>
      <returns>Dati del contesto corrente.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.ExecutePageHierarchy">
      <summary>Esegue il codice in un set di pagine dipendenti.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Html">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.WebPages.Html.HtmlHelper" /> associato a una pagina.</summary>
      <returns>Oggetto in grado di eseguire il rendering di controlli dei form HTML in una pagina.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.InitializePage">
      <summary>Inizializza un oggetto che eredita dalla classe <see cref="T:System.Web.WebPages.WebPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Model">
      <summary>Ottiene il modello associato a una pagina.</summary>
      <returns>Oggetto che rappresenta un modello associato ai dati della visualizzazione di una pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPage.ModelState">
      <summary>Ottiene lo stato del modello associato a una pagina.</summary>
      <returns>Stato del modello.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RegisterPageExecutor(System.Web.WebPages.IWebPageRequestExecutor)">
      <summary>Aggiunge una classe a un elenco di classi che gestiscono l'esecuzione delle pagine e implementano funzionalità personalizzate per le pagine.</summary>
      <param name="executor">Classe da aggiungere.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RenderPage(System.String,System.Object[])">
      <summary>Esegue il rendering di una pagina di contenuto.</summary>
      <returns>Oggetto in grado di scrivere l'output della pagina.</returns>
      <param name="path">Percorso della pagina di cui eseguire il rendering.</param>
      <param name="data">Dati da passare alla pagina.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Validation">
      <summary>Ottiene l'helper di convalida per il contesto di pagina corrente.</summary>
      <returns>Helper di convalida.</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageBase">
      <summary>Funge da classe base per le classi che rappresentano una pagina ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.#ctor">
      <summary>Inizializza la classe <see cref="T:System.Web.WebPages.WebPageBase" /> per l'utilizzo da parte di un'istanza di classe ereditata.Questo costruttore può essere chiamato solo da una classe ereditata.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Quando è sottoposto a override in una classe derivata, configura la pagina Web corrente in base alla configurazione della pagina Web padre.</summary>
      <param name="parentPage">Pagina padre da cui eseguire la lettura delle informazioni di configurazione.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreateInstanceFromVirtualPath(System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Web.WebPages.WebPageBase" /> usando il percorso virtuale specificato.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Web.WebPages.WebPageBase" />.</returns>
      <param name="virtualPath">Percorso virtuale da usare per creare l'istanza.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreatePageFromVirtualPath(System.String,System.Web.HttpContextBase,System.Func{System.String,System.Boolean},System.Web.WebPages.DisplayModeProvider,System.Web.WebPages.IDisplayMode)">
      <summary>Tenta di creare un'istanza WebPageBase da un virtualPath e include le eccezioni complesse del compilatore con messaggi più semplici</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.DefineSection(System.String,System.Web.WebPages.SectionWriter)">
      <summary>Chiamato dalle pagine di contenuto per creare sezioni di contenuto denominate.</summary>
      <param name="name">Nome della sezione da creare.</param>
      <param name="action">Tipo di azione da eseguire con la nuova sezione.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy">
      <summary>Esegue il codice in un set di pagine Web dipendenti.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>Esegue il codice in un set di pagine Web dipendenti usando i parametri specificati.</summary>
      <param name="pageContext">Dati del contesto per la pagina.</param>
      <param name="writer">Writer da usare per scrivere il codice HTML eseguito.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter,System.Web.WebPages.WebPageRenderingBase)">
      <summary>Esegue il codice in un set di pagine Web dipendenti usando il contesto, il writer e la pagina di avvio specificati.</summary>
      <param name="pageContext">Dati del contesto per la pagina.</param>
      <param name="writer">Writer da usare per scrivere il codice HTML eseguito.</param>
      <param name="startPage">Pagina per avviare l'esecuzione nella gerarchia delle pagine.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.GetOutputWriter">
      <summary>Restituisce l'istanza del writer di testo usata per il rendering della pagina.</summary>
      <returns>Writer di testo.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.InitializePage">
      <summary>Inizializza la pagina corrente.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.IsSectionDefined(System.String)">
      <summary>Restituisce un valore che indica se nella pagina è definita la sezione specificata.</summary>
      <returns>true se nella pagina è definita la sezione specificata. In caso contrario, false.</returns>
      <param name="name">Nome della sezione da cercare.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Layout">
      <summary>Ottiene o imposta il percorso di una pagina di layout.</summary>
      <returns>Percorso della pagina di layout.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Output">
      <summary>Ottiene l'oggetto <see cref="T:System.IO.TextWriter" /> corrente per la pagina.</summary>
      <returns>Oggetto <see cref="T:System.IO.TextWriter" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.OutputStack">
      <summary>Ottiene lo stack di oggetti <see cref="T:System.IO.TextWriter" /> per il contesto di pagina corrente.</summary>
      <returns>Oggetti <see cref="T:System.IO.TextWriter" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Page">
      <summary>Fornisce l'accesso di tipo proprietà ai dati di pagina condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Oggetto contenente dati di pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.PageData">
      <summary>Fornisce l'accesso di tipo matrice ai dati di pagina condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Dizionario contenente dati di pagina.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PopContext">
      <summary>Restituisce e rimuove il contesto in cima all'istanza di <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PushContext(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>Inserisce il contesto specificato in cima all'istanza di <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</summary>
      <param name="pageContext">Contesto di pagina di cui effettuare il push nell'istanza di <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</param>
      <param name="writer">Writer per il contesto di pagina.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderBody">
      <summary>Nelle pagine di layout, esegue il rendering della porzione di una pagina di contenuto non inclusa in una sezione denominata.</summary>
      <returns>Contenuto HTML di cui eseguire il rendering.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderPage(System.String,System.Object[])">
      <summary>Esegue il rendering del contenuto di una pagina in un'altra pagina.</summary>
      <returns>Contenuto HTML di cui eseguire il rendering.</returns>
      <param name="path">Percorso della pagina di cui eseguire il rendering.</param>
      <param name="data">(Facoltativo) Matrice di dati da passare alla pagina di cui viene eseguito il rendering.Nella pagina di cui viene eseguito il rendering, è possibile accedere a questi parametri mediante la proprietà <see cref="P:System.Web.WebPages.WebPageBase.PageData" />.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String)">
      <summary>Nelle pagine di layout, esegue il rendering del contenuto di una sezione denominata.</summary>
      <returns>Contenuto HTML di cui eseguire il rendering.</returns>
      <param name="name">Sezione di cui eseguire il rendering.</param>
      <exception cref="T:System.Web.HttpException">Il rendering della sezione <paramref name="name" /> è già stato eseguito.oppureLa sezione <paramref name="name" /> è stata contrassegnata come obbligatoria ma non è stata trovata.</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String,System.Boolean)">
      <summary>Nelle pagine di layout, esegue il rendering del contenuto di una sezione denominata e specifica se la sezione è obbligatoria.</summary>
      <returns>Contenuto HTML di cui eseguire il rendering.</returns>
      <param name="name">Sezione di cui eseguire il rendering.</param>
      <param name="required">true per specificare che la sezione è obbligatoria. In caso contrario, false.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Object)">
      <summary>Scrive l'oggetto specificato come stringa codificata in formato HTML.</summary>
      <param name="value">Oggetto da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Web.WebPages.HelperResult)">
      <summary>Scrive l'oggetto <see cref="T:System.Web.WebPages.HelperResult" /> specificato come stringa codificata in formato HTML.</summary>
      <param name="result">Risultato dell'helper da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.WriteLiteral(System.Object)">
      <summary>Scrive l'oggetto specificato senza eseguirne innanzitutto la codifica HTML.</summary>
      <param name="value">Oggetto da scrivere.</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageContext">
      <summary>Contiene i dati utilizzati da un oggetto <see cref="T:System.Web.WebPages.WebPage" /> per fare riferimento ai dettagli relativi all'applicazione Web, alla richiesta HTTP corrente, al contesto di esecuzione corrente e ai dati di rendering della pagina.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.WebPageContext" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor(System.Web.HttpContextBase,System.Web.WebPages.WebPageRenderingBase,System.Object)">
      <summary>Inizializza una nuova istanza della classe utilizzando il contesto, la pagina e il modello specificati.</summary>
      <param name="context">Dati di contesto della richiesta HTTP da associare al contesto di pagina.</param>
      <param name="page">Dati di pagina da condividere tra pagine, pagine di layout e pagine parziali.</param>
      <param name="model">Modello da associare ai dati di visualizzazione.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Current">
      <summary>Ottiene un riferimento all'oggetto <see cref="T:System.Web.WebPages.WebPageContext" /> corrente associato a una pagina.</summary>
      <returns>Oggetto di contesto di pagina corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Model">
      <summary>Ottiene il modello associato a una pagina.</summary>
      <returns>Oggetto che rappresenta un modello associato ai dati della visualizzazione di una pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Page">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.WebPages.WebPageRenderingBase" /> associato a una pagina.</summary>
      <returns>Oggetto che esegue il rendering della pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.PageData">
      <summary>Ottiene i dati di pagina condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Dizionario contenente dati di pagina.</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageExecutingBase">
      <summary>Fornisce oggetti e metodi usati per l'esecuzione e il rendering di pagine ASP.NET che includono sintassi Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.WebPageExecutingBase" />.Questo costruttore può essere chiamato solo da una classe ereditata.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.App"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.AppState"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.Context">
      <summary>Quando è sottoposto a override in una classe derivata, ottiene o imposta l'oggetto <see cref="T:System.Web.HttpContextBase" /> associato a una pagina.</summary>
      <returns>Dati del contesto corrente.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.String,System.Int32,System.Int32,System.Boolean)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Execute"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.GetOutputWriter">
      <summary>Restituisce l'istanza del writer di testo usata per il rendering della pagina.</summary>
      <returns>Writer di testo.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Href(System.String,System.Object[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizeLayoutPagePath(System.String)"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizePath(System.String)"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPath"></member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPathFactory"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Object)">
      <summary>Scrive la rappresentazione stringa dell'oggetto specificato come stringa codificata in formato HTML.</summary>
      <param name="value">Oggetto da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Web.WebPages.HelperResult)">
      <summary>Scrive l'oggetto <see cref="T:System.Web.WebPages.HelperResult" /> specificato come stringa codificata in formato HTML.</summary>
      <param name="result">Risultato dell'helper da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttribute(System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.String,System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])"></member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteral(System.Object)">
      <summary>Scrive l'oggetto specificato senza codifica HTML.</summary>
      <param name="value">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>Scrive l'oggetto specificato nell'istanza di <see cref="T:System.IO.TextWriter" /> specificata senza codifica HTML.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="content">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>Scrive l'oggetto specificato come stringa codificata in formato HTML nel writer di testo specificato.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="content">Oggetto da codificare e scrivere.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Scrive l'oggetto <see cref="T:System.Web.WebPages.HelperResult" /> specificato come stringa codificata in formato HTML nel writer di testo specificato.</summary>
      <param name="writer">Writer di testo.</param>
      <param name="content">Risultato dell'helper da codificare e scrivere.</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageHttpHandler">
      <summary>Fornisce metodi e proprietà utilizzati per elaborare specifiche estensioni di URL.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.#ctor(System.Web.WebPages.WebPage)">
      <summary>Inizializza una nuova istanza della <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> classe utilizzando la pagina Web specificata.</summary>
      <param name="webPage">Pagina Web da elaborare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPage" /> è null.</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.CreateFromVirtualPath(System.String)">
      <summary>Crea un nuovo <see cref="T:System.Web.IHttpHandler" /> oggetto gestore dal percorso virtuale specificato.</summary>
      <returns>
        <see cref="T:System.Web.IHttpHandler" />Oggetto per il percorso virtuale specificato.</returns>
      <param name="virtualPath">Percorso virtuale da utilizzare per creare il gestore.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.DisableWebPagesResponseHeader">
      <summary>Ottiene o imposta un valore che indica se le intestazioni di risposta delle pagine Web sono disabilitate.</summary>
      <returns>true se le intestazioni di risposta delle pagine Web sono disabilitate. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.GetRegisteredExtensions">
      <summary>Restituisce un elenco di estensioni di file che l'istanza <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> corrente è in grado di elaborare.</summary>
      <returns>Elenco di sola lettura delle estensioni di file elaborate dall'istanza corrente di <see cref="T:System.Web.WebPages.WebPageHttpHandler" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.IsReusable">
      <summary>Ottiene un valore che indica se l'istanza di <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> può essere utilizzata da un'altra richiesta.</summary>
      <returns>true se l'istanza di <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> è riutilizzabile. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Elabora la pagina Web utilizzando il contesto specificato.</summary>
      <param name="context">Contesto da utilizzare durante l'elaborazione della pagina Web.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.RegisterExtension(System.String)">
      <summary>Aggiunge un'estensione di file all'elenco delle estensioni elaborate dall'istanza corrente di <see cref="T:System.Web.WebPages.WebPageHttpHandler" />.</summary>
      <param name="extension">Estensione da aggiungere, senza punto iniziale.</param>
    </member>
    <member name="F:System.Web.WebPages.WebPageHttpHandler.WebPagesVersionHeaderName">
      <summary>Nome del tag HTML (X-AspNetWebPages-Version) per la versione della specifica di ASP.NET Web Pages utilizzata dalla pagina Web.</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPageRenderingBase">
      <summary>Fornisce metodi e proprietà utilizzati per il rendering delle pagine che utilizzano il motore di visualizzazione Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.WebPageRenderingBase" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Cache"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Culture"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.DisplayMode"></member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.ExecutePageHierarchy">
      <summary>Quando è sottoposto a override in una classe derivata, chiama i metodi utilizzati per inizializzare la pagina.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsAjax"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsPost"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Layout">
      <summary>Quando è sottoposto a override in una classe derivata, ottiene o imposta il percorso di una pagina di layout.</summary>
      <returns>Percorso di una pagina di layout.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Page">
      <summary>Quando è sottoposto a override in una classe derivata, fornisce l'accesso di tipo proprietà ai dati di pagina condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Oggetto contenente dati di pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageContext"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageData">
      <summary>Quando è sottoposto a override in una classe derivata, fornisce l'accesso di tipo matrice ai dati di pagina condivisi tra pagine, pagine di layout e pagine parziali.</summary>
      <returns>Oggetto che fornisce l'accesso di tipo matrice ai dati di pagina.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Profile"></member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.RenderPage(System.String,System.Object[])">
      <summary>Quando è sottoposto a override in una classe derivata, esegue il rendering di una pagina Web.</summary>
      <returns>Markup che rappresenta la pagina Web.</returns>
      <param name="path">Percorso della pagina di cui eseguire il rendering.</param>
      <param name="data">Dati aggiuntivi utilizzati per eseguire il rendering della pagina.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Request"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Response"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Server"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Session"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.TemplateInfo"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UICulture"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UrlData"></member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.User"></member>
    <member name="T:System.Web.WebPages.Html.HtmlHelper">
      <summary>Fornisce supporto per il rendering di moduli HTML e per la convalida di form in una pagina Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Crea un dizionario di attributi HTML dall'oggetto di input, traducendo i caratteri di sottolineatura in trattini.</summary>
      <returns>Dizionario che rappresenta gli attributi HTML.</returns>
      <param name="htmlAttributes">Oggetto anonimo che descrive gli attributi HTML.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Restituisce una stringa codificata in formato HTML che rappresenta l'oggetto specificato tramite una codifica minima adatta solo per gli attributi HTML racchiusi tra virgolette.</summary>
      <returns>Stringa codificata in formato HTML che rappresenta l'oggetto.</returns>
      <param name="value">Oggetto da codificare.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.String)">
      <summary>Restituisce una stringa codificata in formato HTML che rappresenta la stringa specificata tramite una codifica minima adatta solo per gli attributi HTML racchiusi tra virgolette.</summary>
      <returns>Stringa codificata in formato HTML che rappresenta l'oggetto originale.</returns>
      <param name="value">Stringa da codificare.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String)">
      <summary>Restituisce un controllo casella di controllo HTML che ha il nome specificato.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di controllo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean)">
      <summary>Restituisce un controllo casella di controllo HTML che ha il nome specificato e lo stato verificato predefinito.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di controllo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="isChecked">true per indicare che l'attributo checked è impostato su checked. In caso contrario, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo casella di controllo HTML che ha il nome specificato, lo stato verificato predefinito e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di controllo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="isChecked">true per indicare che l'attributo checked è impostato su checked. In caso contrario, false.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Object)">
      <summary>Restituisce un controllo casella di controllo HTML che ha il nome specificato, lo stato verificato predefinito e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di controllo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="isChecked">true per indicare che l'attributo checked è impostato su checked. In caso contrario, false.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo casella di controllo HTML che ha il nome specificato e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di controllo.</returns>
      <param name="name"> Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Object)">
      <summary>Restituisce un controllo casella di controllo HTML che ha il nome specificato e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di controllo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Restituisce un controllo elenco a discesa HTML che ha il nome specificato e che contiene le voci di elenco specificate.</summary>
      <returns>Markup HTML che rappresenta il controllo elenco a discesa.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo elenco a discesa HTML che ha il nome specificato e attributi personalizzati definiti da un dizionario degli attributi e che contiene le voci di elenco specificate.</summary>
      <returns>Markup HTML che rappresenta il controllo elenco a discesa.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Restituisce un controllo elenco a discesa HTML che ha il nome specificato e attributi personalizzati definiti da un oggetto attributo e che contiene le voci di elenco specificate.</summary>
      <returns>Markup HTML che rappresenta il controllo elenco a discesa.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Restituisce un controllo elenco a discesa HTML che ha il nome specificato e che contiene le voci di elenco specificate e la voce predefinita.</summary>
      <returns>Markup HTML che rappresenta il controllo elenco a discesa.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo elenco a discesa HTML che ha il nome specificato e attributi personalizzati definiti da un dizionario degli attributi e che contiene le voci di elenco specificate e la voce predefinita.</summary>
      <returns>Markup HTML che rappresenta il controllo elenco a discesa.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Restituisce un controllo elenco a discesa HTML che ha il nome specificato e attributi personalizzati definiti da un oggetto attributo e che contiene le voci di elenco specificate e la voce predefinita.</summary>
      <returns>Markup HTML che rappresenta il controllo elenco a discesa.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo elenco a discesa HTML che ha il nome specificato, attributi personalizzati definiti da un dizionario degli attributi e la selezione predefinita e che contiene le voci di elenco specificate e la voce predefinita.</summary>
      <returns>Markup HTML che rappresenta il controllo elenco a discesa.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="selectedValue">Valore che specifica la voce dell'elenco selezionata per impostazione predefinita.La voce selezionata è costituita dalla prima voce dell'elenco il cui valore o, in mancanza di esso, il cui nome corrisponde al parametro.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>Restituisce un controllo elenco a discesa HTML che ha il nome specificato, attributi personalizzati definiti da un oggetto attributo e la selezione predefinita e che contiene le voci di elenco specificate e la voce predefinita.</summary>
      <returns>Markup HTML che rappresenta il controllo elenco a discesa.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="selectedValue">Valore che specifica la voce dell'elenco selezionata per impostazione predefinita.La voce selezionata è costituita dalla prima voce dell'elenco il cui valore o, in mancanza di esso, il cui nome corrisponde al testo delle voci visualizzato.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.Object)">
      <summary>Restituisce una stringa codificata in formato HTML che rappresenta l'oggetto specificato usando una codifica completa adatta al formato HTML arbitrario.</summary>
      <returns>Stringa codificata in formato HTML che rappresenta l'oggetto.</returns>
      <param name="value">Oggetto da codificare.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.String)">
      <summary>Restituisce una stringa codificata in formato HTML che rappresenta la stringa specificata usando una codifica completa adatta al formato HTML arbitrario.</summary>
      <returns>Stringa codificata in formato HTML che rappresenta l'oggetto originale.</returns>
      <param name="value">Stringa da codificare.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String)">
      <summary>Restituisce un controllo nascosto HTML che ha il nome specificato.</summary>
      <returns>Markup HTML che rappresenta il controllo nascosto.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object)">
      <summary>Restituisce un controllo nascosto HTML che ha il nome e il valore specificati.</summary>
      <returns>Markup HTML che rappresenta il controllo nascosto.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo nascosto HTML che ha il nome specificato, il valore e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo nascosto.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Object)">
      <summary>Restituisce un controllo nascosto HTML che ha il nome specificato, il valore e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo nascosto.</returns>
      <param name="name"> Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.IdAttributeDotReplacement">
      <summary>Ottiene o imposta il carattere usato per sostituire il punto (.) nell'attributo id dei moduli di cui è stato eseguito il rendering.</summary>
      <returns>Carattere usato per sostituire il punto nell'attributo id dei moduli di cui è stato eseguito il rendering.Il valore predefinito è il carattere di sottolineatura (_).</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String)">
      <summary>Restituisce un'etichetta HTML in cui viene visualizzato il testo specificato.</summary>
      <returns>Markup HTML che rappresenta l'etichetta.</returns>
      <param name="labelText">Testo da visualizzare.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.Object)">
      <summary>Restituisce un'etichetta HTML in cui viene visualizzato il testo specificato e che ha gli attributi personalizzati specificati.</summary>
      <returns>Markup HTML che rappresenta l'etichetta.</returns>
      <param name="labelText">Testo da visualizzare.</param>
      <param name="attributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String)">
      <summary>Restituisce un'etichetta HTML in cui viene visualizzato il testo specificato e che ha l'attributo for specificato.</summary>
      <returns>Markup HTML che rappresenta l'etichetta.</returns>
      <param name="labelText">Testo da visualizzare.</param>
      <param name="labelFor">Valore da assegnare all'attributo for dell'elemento di controllo HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un'etichetta HTML in cui viene visualizzato il testo specificato e che ha l'attributo for specificato e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta l'etichetta.</returns>
      <param name="labelText">Testo da visualizzare.</param>
      <param name="labelFor">Valore da assegnare all'attributo for dell'elemento di controllo HTML.</param>
      <param name="attributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Object)">
      <summary>Restituisce un'etichetta HTML in cui viene visualizzato il testo specificato e che possiede l'attributo for specificato e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta l'etichetta.</returns>
      <param name="labelText">Testo da visualizzare.</param>
      <param name="labelFor">Valore da assegnare all'attributo for dell'elemento di controllo HTML.</param>
      <param name="attributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato e che contiene le voci di elenco specificate.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato e attributi personalizzati definiti da un dizionario degli attributi e che contiene le voci di elenco specificate.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato e attributi personalizzati definiti da un oggetto attributo e che contiene le voci di elenco specificate.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato, la dimensione, le voci di elenco e le selezioni predefinite e che specifica se sono abilitate le selezioni multiple.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="selectedValues">Oggetto che specifica le voci dell'elenco selezionate per impostazione predefinita.Le voci selezionate vengono recuperate tramite reflection esaminando le proprietà dell'oggetto.</param>
      <param name="size">Valore da assegnare all'attributo size dell'elemento.</param>
      <param name="allowMultiple">true per indicare che sono abilitate le selezioni multiple. In caso contrario, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato e che contiene le voci di elenco specificate e la voce predefinita.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare la casella di riepilogo.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato e attributi personalizzati definiti da un dizionario degli attributi e che contiene le voci di elenco specificate e la voce predefinita.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato e attributi personalizzati definiti da un oggetto attributo e che contiene le voci di elenco specificate e la voce predefinita.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare la casella di riepilogo.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato e attributi personalizzati definiti da un dizionario degli attributi e che contiene le voci di elenco specificate, la voce predefinita e le selezioni.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="selectedValues">Oggetto che specifica le voci dell'elenco selezionate per impostazione predefinita.Le voci selezionate vengono recuperate tramite reflection esaminando le proprietà dell'oggetto.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato, la dimensione, le voci, la voce predefinita e le selezioni e che specifica se sono abilitate le selezioni multiple.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="selectedValues">Oggetto che specifica le voci dell'elenco selezionate per impostazione predefinita.Le voci selezionate vengono recuperate tramite reflection esaminando le proprietà dell'oggetto.</param>
      <param name="size">Valore da assegnare all'attributo size dell'elemento.</param>
      <param name="allowMultiple">true per indicare che sono abilitate le selezioni multiple. In caso contrario, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato, la dimensione, attributi personalizzati definiti da un dizionario degli attributi, le voci, la voce predefinita e le selezioni e che specifica se sono abilitate le selezioni multiple.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="selectedValues">Oggetto che specifica le voci dell'elenco selezionate per impostazione predefinita.Le voci selezionate vengono recuperate tramite reflection esaminando le proprietà dell'oggetto.</param>
      <param name="size">Valore da assegnare all'attributo size dell'elemento.</param>
      <param name="allowMultiple">true per indicare che sono abilitate le selezioni multiple. In caso contrario, false.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Object)">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome specificato, la dimensione, attributi personalizzati definiti da un oggetto attributo, le voci, la voce predefinita e le selezioni e che specifica se sono abilitate le selezioni multiple.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="selectedValues">Oggetto che specifica le voci dell'elenco selezionate per impostazione predefinita.Le voci selezionate vengono recuperate tramite reflection esaminando le proprietà dell'oggetto.</param>
      <param name="size">Valore da assegnare all'attributo size dell'elemento.</param>
      <param name="allowMultiple">true per indicare che sono abilitate le selezioni multiple. In caso contrario, false.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>Restituisce un controllo casella di riepilogo HTML che ha il nome, le voci, la voce predefinita, attributi personalizzati definiti da un oggetto attributo e le selezioni.</summary>
      <returns>Markup HTML che rappresenta il controllo casella di riepilogo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento select HTML.</param>
      <param name="defaultOption">Testo da visualizzare per l'opzione predefinita dell'elenco.</param>
      <param name="selectList">Elenco di istanze di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usate per popolare l'elenco.</param>
      <param name="selectedValues">Oggetto che specifica le voci dell'elenco selezionate per impostazione predefinita.Le voci selezionate vengono recuperate tramite reflection esaminando le proprietà dell'oggetto.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>Crea un dizionario da un oggetto tramite l'aggiunta al dizionario della proprietà di ogni istanza pubblica come chiave con il rispettivo valore associato.Esporrà anche le proprietà pubbliche dai tipi derivati.Usato in genere con oggetti di tipo anonimo.</summary>
      <returns>Dizionario creato dei nomi di proprietà e dei valori di proprietà.</returns>
      <param name="value">Oggetto da convertire.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String)">
      <summary>Restituisce un controllo password HTML che ha il nome specificato.</summary>
      <returns>Markup HTML che rappresenta il controllo password.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object)">
      <summary>Restituisce un controllo password HTML che ha il nome e il valore specificati.</summary>
      <returns>Markup HTML che rappresenta il controllo password.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo password HTML che ha il nome specificato, il valore e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo password.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Object)">
      <summary>Restituisce un controllo password HTML che ha il nome specificato, il valore e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo password.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object)">
      <summary>Restituisce un controllo pulsante di opzione HTML che ha il nome e il valore specificati.</summary>
      <returns>Markup HTML che rappresenta il controllo pulsante di opzione.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.L'attributo name definisce il gruppo a cui appartiene il pulsante di opzione.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean)">
      <summary>Restituisce un controllo pulsante di opzione HTML che ha il nome specificato, il valore e lo stato selezionato predefinito.</summary>
      <returns>Markup HTML che rappresenta il controllo pulsante di opzione.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.L'attributo name definisce il gruppo a cui appartiene il pulsante di opzione.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="isChecked">true per indicare che il controllo è selezionato. In caso contrario, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo pulsante di opzione HTML che ha il nome specificato, il valore, lo stato selezionato predefinito e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo pulsante di opzione.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.L'attributo name definisce il gruppo a cui appartiene il pulsante di opzione.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="isChecked">true per indicare che il controllo è selezionato. In caso contrario, false.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Object)">
      <summary>Restituisce un controllo pulsante di opzione HTML che ha il nome specificato, il valore, lo stato selezionato predefinito e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo pulsante di opzione.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.L'attributo name definisce il gruppo a cui appartiene il pulsante di opzione.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="isChecked">true per indicare che il controllo è selezionato. In caso contrario, false.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo pulsante di opzione HTML che ha il nome specificato, il valore e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo pulsante di opzione.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.L'attributo name definisce il gruppo a cui appartiene il pulsante di opzione.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Object)">
      <summary>Restituisce un controllo pulsante di opzione HTML che ha il nome specificato, il valore e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo pulsante di opzione.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.L'attributo name definisce il gruppo a cui appartiene il pulsante di opzione.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.Object)">
      <summary>Esegue il wrapping del markup HTML in un'istanza di <see cref="T:System.Web.HtmlString" /> in modo che tale markup venga interpretato come markup HTML.</summary>
      <returns>HTML non codificato.</returns>
      <param name="value">Oggetto per il quale eseguire il rendering in HTML.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.String)">
      <summary>Esegue il wrapping del markup HTML in un'istanza di <see cref="T:System.Web.HtmlString" /> in modo che tale markup venga interpretato come markup HTML.</summary>
      <returns>HTML non codificato.</returns>
      <param name="value">Stringa da interpretare come markup HTML anziché come stringa codificata in formato HTML.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String)">
      <summary>Restituisce un controllo input di testo multilinea HTML (area di testo) che ha il nome specificato.</summary>
      <returns>Markup HTML che rappresenta il controllo area di testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento textarea HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo input di testo multilinea HTML (area di testo) che ha il nome specificato e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo area di testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento textarea HTML.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Object)">
      <summary>Restituisce un controllo input di testo multilinea HTML (area di testo) che ha il nome specificato e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo area di testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento textarea HTML.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String)">
      <summary>Restituisce un controllo input di testo multilinea HTML (area di testo) che ha il nome e il valore specificati.</summary>
      <returns>Markup HTML che rappresenta il controllo area di testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento textrarea HTML.</param>
      <param name="value">Testo da visualizzare.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo input di testo multilinea HTML (area di testo) che ha il nome specificato, il valore e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo area di testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento textarea HTML.</param>
      <param name="value">Testo da visualizzare.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo input di testo multilinea HTML (area di testo) che ha il nome specificato, il valore, gli attributi row e col e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo area di testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento textarea HTML.</param>
      <param name="value">Testo da visualizzare.</param>
      <param name="rows">Valore da assegnare all'attributo rows dell'elemento.</param>
      <param name="columns">Valore da assegnare all'attributo cols dell'elemento.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Restituisce un controllo input di testo multilinea HTML (area di testo) che ha il nome specificato, il valore, gli attributi row e col e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo area di testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento textarea HTML.</param>
      <param name="value">Testo da visualizzare.</param>
      <param name="rows">Valore da assegnare all'attributo rows dell'elemento.</param>
      <param name="columns">Valore da assegnare all'attributo cols dell'elemento.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Object)">
      <summary>Restituisce un controllo input di testo multilinea HTML (area di testo) che ha il nome specificato, il valore e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo area di testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento textarea HTML.</param>
      <param name="value">Testo da visualizzare.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String)">
      <summary>Restituisce un controllo testo HTML che ha il nome specificato.</summary>
      <returns>Markup HTML che rappresenta il controllo testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object)">
      <summary>Restituisce un controllo testo HTML che ha il nome e il valore specificati.</summary>
      <returns>Markup HTML che rappresenta il controllo testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un controllo testo HTML che ha il nome specificato, il valore e attributi personalizzati definiti da un dizionario degli attributi.</summary>
      <returns>Markup HTML che rappresenta il controllo testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Object)">
      <summary>Restituisce un controllo testo HTML che ha il nome specificato, il valore e attributi personalizzati definiti da un oggetto attributo.</summary>
      <returns>Markup HTML che rappresenta il controllo testo.</returns>
      <param name="name">Valore da assegnare all'attributo name dell'elemento di controllo HTML.</param>
      <param name="value">Valore da assegnare all'attributo value dell'elemento.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Ottiene o imposta un valore che indica se la pagina usa JavaScript non intrusivo per la funzionalità AJAX.</summary>
      <returns>true se la pagina usa JavaScript non intrusivo. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputCssClassName">
      <summary>Ottiene o imposta il nome della classe CSS che definisce l'aspetto degli elementi input quando la convalida ha esito negativo.</summary>
      <returns>Nome della classe CSS.Il valore predefinito è field-validation-error.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Ottiene o imposta il nome della classe CSS che definisce l'aspetto degli elementi input quando la convalida ha esito positivo.</summary>
      <returns>Nome della classe CSS.Il valore predefinito è input-validation-valid.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String)">
      <summary>Restituisce un elemento span HTML che contiene il primo messaggio di errore di convalida relativo al campo del form specificato.</summary>
      <returns>null se il valore del campo specificato è valido. In caso contrario, markup HTML che rappresenta il messaggio di errore di convalida associato al campo specificato.</returns>
      <param name="name">Nome del campo del form convalidato.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un elemento span HTML che ha gli attributi personalizzati specificati definiti da un dizionario degli attributi e che contiene il primo messaggio di errore di convalida relativo al campo del form specificato.</summary>
      <returns>null se il valore del campo specificato è valido. In caso contrario, markup HTML che rappresenta il messaggio di errore di convalida associato al campo specificato.</returns>
      <param name="name">Nome del campo del form convalidato.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Object)">
      <summary>Restituisce un elemento span HTML che ha gli attributi personalizzati specificati definiti da un oggetto attributo e che contiene il primo messaggio di errore di convalida relativo al campo del form specificato.</summary>
      <returns>null se il valore del campo specificato è valido. In caso contrario, markup HTML che rappresenta il messaggio di errore di convalida associato al campo specificato.</returns>
      <param name="name">Nome del campo del form convalidato.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String)">
      <summary>Restituisce un elemento span HTML che contiene un messaggio di errore di convalida relativo al campo del form specificato.</summary>
      <returns>null se il valore del campo specificato è valido. In caso contrario, markup HTML che rappresenta il messaggio di errore di convalida associato al campo specificato.</returns>
      <param name="name">Nome del campo del form convalidato.</param>
      <param name="message">Messaggio di errore di convalida da visualizzare.Se null, viene visualizzato il primo messaggio di errore di convalida associato al campo del form specificato.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un elemento span HTML che ha gli attributi personalizzati specificati definiti da un dizionario degli attributi e che contiene un messaggio di errore di convalida relativo al campo del form specificato.</summary>
      <returns>null se il campo specificato è valido. In caso contrario, markup HTML che rappresenta un messaggio di errore di convalida associato al campo specificato.</returns>
      <param name="name">Nome del campo del form convalidato.</param>
      <param name="message">Messaggio di errore di convalida da visualizzare.Se null, viene visualizzato il primo messaggio di errore di convalida associato al campo del form specificato.</param>
      <param name="htmlAttributes"> Nomi e valori di attributi personalizzati per l'elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Object)">
      <summary>Restituisce un elemento span HTML che ha gli attributi personalizzati specificati definiti da un oggetto attributo e che contiene un messaggio di errore di convalida relativo al campo del form specificato.</summary>
      <returns>null se il campo specificato è valido. In caso contrario, markup HTML che rappresenta un messaggio di errore di convalida associato al campo specificato.</returns>
      <param name="name">Nome del campo del form convalidato.</param>
      <param name="message">Messaggio di errore di convalida da visualizzare.Se null, viene visualizzato il primo messaggio di errore di convalida associato al campo del form specificato.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> è null o vuoto.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageCssClassName">
      <summary>Ottiene o imposta il nome della classe CSS che definisce l'aspetto dei messaggi di errore di convalida quando quest'ultima ha esito negativo.</summary>
      <returns>Nome della classe CSS.Il valore predefinito è field-validation-error.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Ottiene o imposta il nome della classe CSS che definisce l'aspetto dei messaggi di errore di convalida quando quest'ultima ha esito positivo.</summary>
      <returns>Nome della classe CSS.Il valore predefinito è field-validation-valid.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary">
      <summary>Restituisce un elemento div HTML che contiene un elenco non ordinato di tutti i messaggi di errore di convalida provenienti dal dizionario di stato del modello.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Boolean)">
      <summary>Restituisce un elemento div HTML che contiene un elenco non ordinato di messaggi di errore di convalida provenienti dal dizionario di stato del modello, con l'esclusione facoltativa degli errori a livello di campo.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
      <param name="excludeFieldErrors">true per escludere dall'elenco i messaggi di errore di convalida a livello di campo; false per includere i messaggi di errore di convalida sia a livello di modello sia a livello di campo.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un elemento div HTML che ha gli attributi personalizzati specificati definiti da un dizionario degli attributi e che contiene un elenco non ordinato di tutti i messaggi di errore di convalida presenti nel dizionario di stato del modello.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Object)">
      <summary>Restituisce un elemento div HTML che ha gli attributi personalizzati specificati definiti da un oggetto attributo e che contiene un elenco non ordinato di tutti i messaggi di errore di convalida presenti nel dizionario di stato del modello.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String)">
      <summary>Restituisce un elemento div HTML che contiene un messaggio di riepilogo e un elenco non ordinato di tutti i messaggi di errore di convalida presenti nel dizionario di stato del modello.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
      <param name="message">Messaggio che precede l'elenco di messaggi di errore di convalida.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un elemento div HTML che ha gli attributi personalizzati specificati definiti da un dizionario degli attributi e che contiene un messaggio di riepilogo e un elenco non ordinato di messaggi di errore di convalida provenienti dal dizionario di stato del modello, con l'esclusione facoltativa degli errori a livello di campo.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
      <param name="message">Messaggio di riepilogo che precede l'elenco di messaggi di errore di convalida.</param>
      <param name="excludeFieldErrors">true per escludere dai risultati i messaggi di errore di convalida a livello di campo; false per includere i messaggi di errore di convalida sia a livello di modello sia a livello di campo.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Object)">
      <summary>Restituisce un elemento div HTML che ha gli attributi personalizzati specificati definiti da un oggetto attributo e che contiene un messaggio di riepilogo e un elenco non ordinato di messaggi di errore di convalida provenienti dal dizionario di stato del modello, con l'esclusione facoltativa degli errori a livello di campo.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
      <param name="message">Messaggio di riepilogo che precede l'elenco di messaggi di errore di convalida.</param>
      <param name="excludeFieldErrors">true per escludere dai risultati i messaggi di errore di convalida a livello di campo, false per includere tali messaggi.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un elemento div HTML che ha gli attributi personalizzati specificati definiti da un dizionario degli attributi e che contiene un messaggio di riepilogo e un elenco non ordinato di tutti i messaggi di errore di convalida provenienti dal dizionario di stato del modello.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
      <param name="message">Messaggio che precede l'elenco di messaggi di errore di convalida.</param>
      <param name="htmlAttributes">Nomi e valori di attributi personalizzati per l'elemento.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Object)">
      <summary>Restituisce un elemento div HTML che ha gli attributi personalizzati specificati definiti da un oggetto attributo e che contiene un messaggio di riepilogo e un elenco non ordinato di tutti i messaggi di errore di convalida provenienti dal dizionario di stato del modello.</summary>
      <returns>Markup HTML che rappresenta i messaggi di errore di convalida.</returns>
      <param name="message">Messaggio di riepilogo che precede l'elenco di messaggi di errore di convalida.</param>
      <param name="htmlAttributes">Oggetto contenente gli attributi personalizzati per l'elemento.I nomi e i valori degli attributi vengono recuperati tramite reflection esaminando le proprietà dell'oggetto.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryClass">
      <summary>Ottiene o imposta il nome della classe CSS che definisce l'aspetto di un riepilogo di convalida quando quest'ultima ha esito negativo.</summary>
      <returns>Nome della classe CSS.Il valore predefinito è validation-summary-errors.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryValidClass">
      <summary>Ottiene o imposta il nome della classe CSS che definisce l'aspetto di un riepilogo di convalida quando quest'ultima ha esito positivo.</summary>
      <returns>Nome della classe CSS.Il valore predefinito è validation-summary-valid.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelState">
      <summary>Incapsula lo stato di associazione del modello a una proprietà di un argomento del metodo di azione o all'argomento stesso.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelState.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Html.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Errors">
      <summary>Restituisce un elenco di stringhe che contiene gli errori che si sono verificati durante l'associazione del modello.</summary>
      <returns>Errore che si è verificato durante l'associazione del modello.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Value">
      <summary>Restituisce un oggetto che incapsula il valore associato durante l'associazione del modello.</summary>
      <returns>Valore associato.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelStateDictionary">
      <summary>Rappresenta il risultato dell'associazione di un form pubblicato a un metodo di azione, che include informazioni quali lo stato della convalida e messaggi di errore di convalida.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" /> utilizzando i valori copiati dal dizionario di stato del modello specificato.</summary>
      <param name="dictionary">Dizionario di stato del modello da cui vengono copiati i valori.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Aggiunge l'elemento specificato al dizionario di stato del modello.</summary>
      <param name="item">Voce da aggiungere al dizionario di stato del modello.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.String,System.Web.WebPages.Html.ModelState)">
      <summary>Aggiunge una voce con la chiave e il valore specificati al dizionario di stato del modello.</summary>
      <param name="key">Chiave.</param>
      <param name="value">Valore.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddError(System.String,System.String)">
      <summary>Aggiunge un messaggio di errore allo stato del modello associato alla chiave specificata.</summary>
      <param name="key">Chiave associata allo stato del modello a cui viene aggiunto il messaggio di errore.</param>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddFormError(System.String)">
      <summary>Aggiunge un messaggio di errore allo stato del modello associato all'intero form.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Clear">
      <summary>Rimuove tutti gli elementi dal dizionario di stato del modello.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Determina se il dizionario di stato del modello contiene la voce specificata.</summary>
      <returns>true se il dizionario di stato del modello contiene la voce specificata. In caso contrario, false.</returns>
      <param name="item">Voce da ricercare.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Determina se il dizionario di stato del modello contiene la chiave specificata.</summary>
      <returns>true se il dizionario di stato del modello contiene la chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave da ricercare.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState}[],System.Int32)">
      <summary>Copia gli elementi del dizionario di stato del modello in una matrice, a partire dall'indice specificato.</summary>
      <param name="array">Istanza unidimensionale di <see cref="T:System.Array" /> in cui verranno copiati gli elementi.</param>
      <param name="arrayIndex">Indice in <paramref name="array" /> in corrispondenza del quale viene iniziata la copia.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Count">
      <summary>Ottiene il numero di stati del modello contenuti nel dizionario di stato del modello.</summary>
      <returns>Numero di stati del modello contenuti nel dizionario di stato del modello.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.GetEnumerator">
      <summary>Restituisce un enumeratore che può essere utilizzato per scorrere la raccolta.</summary>
      <returns>Enumeratore che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsReadOnly">
      <summary>Ottiene un valore che indica se il dizionario di stato del modello è di sola lettura.</summary>
      <returns>true se il dizionario di stato del modello è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsValid">
      <summary>Ottiene un valore che indica se a uno stato del modello nel dizionario sono associati messaggi di errore.</summary>
      <returns>true se a uno stato del modello nel dizionario sono associati messaggi di errore. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.IsValidField(System.String)">
      <summary>Determina se alla chiave specificata sono associati messaggi di errore.</summary>
      <returns>true se alla chiave specificata non è associato alcun messaggio di errore. In caso contrario, false.</returns>
      <param name="key">Chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è null.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Item(System.String)">
      <summary>Ottiene o imposta lo stato del modello associato alla chiave specificata nel dizionario di stato del modello.</summary>
      <returns>Stato del modello associato alla chiave specificata nel dizionario.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Keys">
      <summary>Ottiene un elenco contenente le chiavi presenti nel dizionario di stato del modello.</summary>
      <returns>Elenco di chiavi contenute nel dizionario di stato del modello.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Merge(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>Copia i valori dal dizionario di stato del modello specificato in questa istanza di <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />, sovrascrivendo i valori esistenti quando le chiavi corrispondono.</summary>
      <param name="dictionary">Dizionario di stato del modello da cui vengono copiati i valori.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Rimuove la prima occorrenza della voce specificata dal dizionario di stato del modello.</summary>
      <returns>true se la voce è stata rimossa dal dizionario di stato del modello; false se la voce non è stata rimossa o non è presente nel dizionario di stato del modello.</returns>
      <param name="item">Voce da rimuovere.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.String)">
      <summary>Rimuove la voce con la chiave specificata dal dizionario di stato del modello.</summary>
      <returns>true se la voce è stata rimossa dal dizionario di stato del modello; false se la voce non è stata rimossa o non è presente nel dizionario di stato del modello.</returns>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.SetModelValue(System.String,System.Object)">
      <summary>Imposta il valore dello stato del modello associato alla chiave specificata.</summary>
      <param name="key">Chiave di cui impostare il valore.</param>
      <param name="value">Valore su cui impostare la chiave.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che può essere utilizzato per scorrere il dizionario di stato del modello.</summary>
      <returns>Enumeratore che può essere utilizzato per scorrere il dizionario di stato del modello.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.TryGetValue(System.String,System.Web.WebPages.Html.ModelState@)">
      <summary>Ottiene il valore di stato del modello associato alla chiave specificata.</summary>
      <returns>true se il dizionario di stato del modello contiene un elemento con la chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave di cui ottenere il valore.</param>
      <param name="value">Quando termina, questo metodo restituisce il valore di stato del modello associato alla chiave specificata, se la chiave viene trovata. In caso contrario, contiene il valore predefinito per il tipo <see cref="T:System.Web.WebPages.Html.ModelState" />.Questo parametro viene passato senza inizializzazione.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Values">
      <summary>Ottiene un elenco contenente i valori contenuti nel dizionario di stato del modello.</summary>
      <returns>Elenco di valori contenuti nel dizionario di stato del modello.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.SelectListItem">
      <summary>Rappresenta una voce contenuta in un elenco di selezione HTML.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Html.SelectListItem" /> utilizzando le impostazioni predefinite.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor(System.Web.WebPages.Html.SelectListItem)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Html.SelectListItem" /> copiando la voce specificata nell'elenco di selezione.</summary>
      <param name="item">Voce dell'elenco di selezione da copiare.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Selected">
      <summary>Ottiene o imposta un valore che indica se l'istanza di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> è selezionata.</summary>
      <returns>true se la voce contenuta nell'elenco di selezione è selezionata. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Text">
      <summary>Ottiene o imposta il testo utilizzato per visualizzare l'istanza di <see cref="T:System.Web.WebPages.Html.SelectListItem" /> in una pagina Web.</summary>
      <returns>Testo utilizzato per visualizzare la voce dell'elenco di selezione.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Value">
      <summary>Ottiene o imposta il valore dell'attributo HTML value relativo all'elemento HTML option associato all'istanza di <see cref="T:System.Web.WebPages.Html.SelectListItem" />.</summary>
      <returns>Valore dell'attributo HTML value associato alla voce dell'elenco di selezione.</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.InstrumentationService">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Rappresenta un servizio di strumentazione delle pagine Web.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.#ctor">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Instrumentation.InstrumentationService" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.BeginContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Viene chiamato prima di eseguire il rendering dell'output per il contesto specificato.</summary>
      <param name="context">Contesto.</param>
      <param name="virtualPath">Percorso virtuale.</param>
      <param name="writer">Writer.</param>
      <param name="startPosition">Posizione iniziale.</param>
      <param name="length">Lunghezza del contesto.</param>
      <param name="isLiteral">Determina se il contesto è un valore letterale.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.EndContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Viene chiamato dopo l'esecuzione del rendering dell'output per il contesto specificato.</summary>
      <param name="context">Contesto.</param>
      <param name="virtualPath">Percorso virtuale.</param>
      <param name="writer">Writer.</param>
      <param name="startPosition">Posizione iniziale.</param>
      <param name="length">Lunghezza del contesto.</param>
      <param name="isLiteral">Determina se il contesto è un valore letterale.</param>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.InstrumentationService.IsAvailable">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene un valore che indica se il servizio è disponibile.</summary>
      <returns>true se il servizio è disponibile. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.PositionTagged`1">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Rappresenta una posizione con tag.</summary>
      <typeparam name="T">Tipo della posizione.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.#ctor(`0,System.Int32)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <param name="value">Valore dell'istanza corrente.</param>
      <param name="offset">Offset.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.Equals(System.Object)">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente. In caso contrario, false.</returns>
      <param name="obj">Oggetto con cui effettuare il confronto.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.GetHashCode">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Restituisce il codice hash dell'istanza corrente.</summary>
      <returns>Codice hash dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Equality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Determina se i due oggetti sono uguali.</summary>
      <returns>true se i due oggetti sono uguali. In caso contrario, false.</returns>
      <param name="left">Primo oggetto.</param>
      <param name="right">Secondo oggetto.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Tuple{`0,System.Int32})~System.Web.WebPages.Instrumentation.PositionTagged{`0}">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> che rappresenta l'oggetto <paramref name="value" /> convertito.</returns>
      <param name="value">Oggetto da convertire.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Web.WebPages.Instrumentation.PositionTagged{`0})~`0">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Converte <paramref name="value" /> in un oggetto <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <returns>
        <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" /> che rappresenta l'oggetto <paramref name="value" /> convertito.</returns>
      <param name="value">Oggetto da convertire.</param>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Inequality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Determina se i due oggetti non sono uguali.</summary>
      <returns>true se i due oggetti non sono uguali. In caso contrario, false.</returns>
      <param name="left">Primo oggetto.</param>
      <param name="right">Secondo oggetto.</param>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Position">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene o imposta la posizione associata a <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <returns>Posizione associata a <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.ToString">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Restituisce la rappresentazione di una stringa dell'oggetto <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</summary>
      <returns>Stringa che rappresenta l'oggetto <see cref="T:System.Web.WebPages.Instrumentation.PositionTagged`1" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Value">
      <summary>Questo tipo/membro supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.Ottiene o imposta il valore dell'istanza corrente.</summary>
      <returns>Valore dell'istanza corrente.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider">
      <summary>Definisce un provider di archiviazione per gli ambiti delle richieste ASP.NET.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.ApplicationScope">
      <summary>Ottiene il dizionario utilizzato per memorizzare dati nell'ambito dell'applicazione.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito dell'applicazione.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.CurrentScope">
      <summary>Ottiene o imposta il dizionario utilizzato per memorizzare dati nell'ambito corrente.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.GlobalScope">
      <summary>Ottiene il dizionario utilizzato per memorizzare dati nell'ambito globale.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito globale.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.RequestScope">
      <summary>Ottiene il dizionario utilizzato per memorizzare dati nell'ambito della richiesta.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito della richiesta.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.IScopeStorageProvider">
      <summary>Definisce un dizionario che fornisce un accesso con ambito specifico ai dati.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.CurrentScope">
      <summary>Ottiene e imposta il dizionario utilizzato per memorizzare dati nell'ambito corrente.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.GlobalScope">
      <summary>Ottiene il dizionario utilizzato per memorizzare dati in un ambito globale.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito globale.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorage">
      <summary>Definisce una classe utilizzata per l'archiviazione in un ambito temporaneo.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope">
      <summary>Restituisce un dizionario utilizzato per memorizzare dati in un ambito temporaneo, in base all'ambito contenuto nella proprietà <see cref="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope" />.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito temporaneo.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Restituisce un dizionario utilizzato per memorizzare dati in un ambito temporaneo.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito temporaneo.</returns>
      <param name="context">Contesto.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentProvider">
      <summary>Ottiene o imposta il provider dell'ambito corrente.</summary>
      <returns>Provider dell'ambito corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope">
      <summary>Ottiene il dizionario utilizzato per memorizzare dati nell'ambito corrente.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.GlobalScope">
      <summary>Ottiene il dizionario utilizzato per memorizzare dati in un ambito globale.</summary>
      <returns>Dizionario in cui vengono memorizzati i dati dell'ambito globale.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorageDictionary">
      <summary>Rappresenta una raccolta di chiavi e di valori utilizzati per memorizzare dati in ambiti diversi, ad esempio locale, globale e così via.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> utilizzando l'ambito di base specificato.</summary>
      <param name="baseScope">Ambito di base.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Aggiunge una coppia chiave-valore all'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> utilizzando la raccolta generica specificata.</summary>
      <param name="item">Coppia chiave-valore.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Object,System.Object)">
      <summary>Aggiunge la chiave e il valore specificati all'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
      <param name="key">Chiave.</param>
      <param name="value">Valore.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BackingStore">
      <summary>Ottiene il dizionario in cui sono memorizzati i dati dell'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope">
      <summary>Ottiene l'ambito di base per l'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
      <returns>Ambito di base per l'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Clear">
      <summary>Rimuove tutte le chiavi e i valori dagli oggetti <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenati.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Restituisce un valore che indica se la coppia chiave-valore specificata esiste nell'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> o <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true se l'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> o l'oggetto <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> contiene un elemento con la coppia chiave-valore specificata. In caso contrario, false.</returns>
      <param name="item">Coppia chiave-valore.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.ContainsKey(System.Object)">
      <summary>Restituisce un valore che indica se la chiave specificata esiste nell'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> o <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true se l'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> o <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> contiene un elemento con la chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
      <summary>Copia tutti gli elementi presenti nell'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e nell'oggetto <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> in un oggetto <see cref="T:System.Array" />, a partire dall'indice specificato.</summary>
      <param name="array">Matrice.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" />.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Count">
      <summary>Ottiene il numero di coppie chiave-valore presenti negli oggetti <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenati.</summary>
      <returns>Numero di coppie chiave-valore.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetEnumerator">
      <summary>Restituisce un enumeratore che può essere utilizzato per scorrere gli oggetti <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenati.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetItems">
      <summary>Restituisce un enumeratore che può essere utilizzato per scorrere gli elementi distinti degli oggetti <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenati.</summary>
      <returns>Enumeratore contenente elementi distinti degli oggetti dizionario concatenati.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.IsReadOnly">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> è di sola lettura.</summary>
      <returns>true se l'oggetto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Item(System.Object)">
      <summary>Ottiene o imposta l'elemento associato alla chiave specificata.</summary>
      <returns>Elemento con la chiave specificata.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Keys">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> contenente le chiavi degli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>Oggetto contenente tali chiavi.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Rimuove la coppia chiave-valore specificata dagli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true se la coppia chiave-valore viene rimossa; false se il parametro <paramref name="item" /> non viene trovato negli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</returns>
      <param name="item">Coppia chiave-valore.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Object)">
      <summary>Rimuove il valore con la chiave specificata dagli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true se la coppia chiave-valore viene rimossa; false se il parametro <paramref name="key" /> non viene trovato negli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</returns>
      <param name="key">Chiave.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.SetValue(System.Object,System.Object)">
      <summary>Imposta un valore utilizzando la chiave specificata negli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <param name="key">Chiave.</param>
      <param name="value">Valore.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore per gli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>Enumeratore.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.TryGetValue(System.Object,System.Object@)">
      <summary>Ottiene il valore associato alla chiave specificata dagli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true se gli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> contengono un elemento con la chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave.</param>
      <param name="value">Quando termina, questo metodo restituisce il valore associato alla chiave specificata, se questa viene trovata. In caso contrario, contiene il valore predefinito per il tipo del parametro <paramref name="value" />.Questo parametro viene passato senza inizializzazione.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Values">
      <summary>Ottiene un oggetto <see cref="T:System.Collections.Generic.List`1" /> contenente i valori degli oggetti concatenati <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> e <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>Oggetto contenente tali valori.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.StaticScopeStorageProvider">
      <summary>Fornisce un accesso con ambito specifico ai dati statici.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.StaticScopeStorageProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.WebPages.Scope.StaticScopeStorageProvider" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.CurrentScope">
      <summary>Ottiene o imposta un dizionario che memorizza i dati correnti in un contesto statico.</summary>
      <returns>Dizionario che fornisce i dati dell'ambito corrente.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.GlobalScope">
      <summary>Ottiene un dizionario che memorizza i dati globali in un contesto statico.</summary>
      <returns>Dizionario che fornisce i dati dell'ambito globale.</returns>
    </member>
  </members>
</doc>